### Directory Structure ###
Directory structure:
└── francoishup-prototype_demo/
    └── Prototype/
        └── src/
            ├── Data.java
            ├── Prototype.java
            ├── ServeurConnection.java
            ├── StudentDAO.java
            ├── StudentImpl.java
            └── Systeme.java


### Code Content ###
================================================
File: Prototype/src/Data.java
================================================
import java.util.HashMap;

public class Data<k,v> {

    public HashMap<k,v> data = new HashMap<>();

    public void setKeyValue(k key,v value){
        this.data.put(key, value);
    }

    public v getValueOfkey(k key) {
        return data.get(key);
    }

    @Override
    public String toString() {
        return "Data{" +
                "data=" + data +
                '}';
    }
}


================================================
File: Prototype/src/Prototype.java
================================================
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;

public class Prototype<T> implements Cloneable {

    private T object;

    public Prototype(String codePermanent) {
        try {
            // Appel de serveur
            TimeUnit.SECONDS.sleep(3);

            ServeurConnection sc = new ServeurConnection();
            String prepQuery = String.format("SELECT FROM student WHERE codePermanent == %s", codePermanent);
            Data dataStudent = sc.query(prepQuery);

            StudentDAO student = new StudentImpl(codePermanent);
            ArrayList<String> cours = (ArrayList) dataStudent.getValueOfkey("cours");
            student.setClasses(cours);
            this.object = (T) student;

        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    public Object clone() throws CloneNotSupportedException
    {
        Object newPrototype = super.clone();
        return newPrototype;
    }

    public T getObject() {
        return object;
    }

    @Override
    public String toString() {
        return "Prototype{" +
                "object=" + object +
                '}';
    }
}


================================================
File: Prototype/src/ServeurConnection.java
================================================
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

/*
 * Server mock
 */
public class ServeurConnection {

    public Data query(String query) {
        // mock les donnees d'un objet noSQL
        Data data = new Data<>();
        ArrayList cours = new ArrayList(Arrays.asList(
                "INF3000",
                "INF4000",
                "INF5000"));
        data.setKeyValue("cours",cours);
        return data;
    }

}


================================================
File: Prototype/src/StudentDAO.java
================================================
import java.util.ArrayList;
import java.util.List;

public interface StudentDAO {

    void setClasses(ArrayList classes);
    List<String> getClasses();

}


================================================
File: Prototype/src/StudentImpl.java
================================================
import java.util.ArrayList;

public class StudentImpl implements StudentDAO,Cloneable {

    private final String codePermanent;
    private ArrayList<String> classes;

    public StudentImpl(String codePermanent) {
        this.codePermanent = codePermanent;
    }

    @Override
    public void setClasses(ArrayList classes) {
        this.classes = classes;
    }

    @Override
    public ArrayList<String> getClasses() {
        return classes;
    }

    @Override
    public String toString() {
        return "StudentImpl{" +
                "codePermanent='" + codePermanent + '\'' +
                ", classes=" + classes +
                '}';
    }
}


================================================
File: Prototype/src/Systeme.java
================================================
import java.util.ArrayList;

public class Systeme {

    public static void main(String[] args) {

        System.out.println("Program starting");
        System.out.println("Searching in database for student ... ");

        long startTime= System.currentTimeMillis();
        // recu d'un formulaire
        String codePermanent = "HUPF92810284";
        Prototype<StudentDAO> p1 = new Prototype(codePermanent);

        // do something
        ArrayList<String> classesStudent = new ArrayList<>(p1.getObject().getClasses());

        long checkpoint1 = System.currentTimeMillis();
        System.out.println("Protype 1 (getting data) :" + p1 + " => " +  (checkpoint1 - startTime) + "ms");

        // Nouveau protoype
        try {
            Prototype<StudentDAO> p2 = (Prototype) p1.clone();
            ArrayList<String> newClasses = new ArrayList<>();
            newClasses.add("INF1000");
            newClasses.add("INF2000");
            newClasses.add("INF3000");

            // do something
            p2.getObject().setClasses(newClasses);

            long checkpoint2 = System.currentTimeMillis();
            System.out.println("Prototype 2 (copying data) : " + p2 + " => " +  (checkpoint2 - checkpoint1) + "ms");

        } catch (CloneNotSupportedException e) {
            e.printStackTrace();
        }





    }
}



