### Directory Structure ###
Directory structure:
└── francoishup-exemplesinf5190/
    ├── README.md
    ├── Ateliers/
    │   ├── Ajax/
    │   │   └── enonce.md
    │   ├── Api/
    │   │   └── enonce.md
    │   ├── BD/
    │   │   ├── enonce.md
    │   │   └── input.txt
    │   ├── Flask-1/
    │   │   └── enonce.md
    │   ├── Flask-2/
    │   │   └── enonce.md
    │   ├── HTTP/
    │   │   └── enonce.md
    │   ├── JSON/
    │   │   ├── Exercice2.json
    │   │   ├── Exercice3.json
    │   │   ├── Exercice4.json
    │   │   ├── enonce.md
    │   │   ├── json_avec_erreurs.json
    │   │   └── json_sans_erreurs.json
    │   ├── MailAuth/
    │   │   └── enonce.md
    │   ├── MotDePasse/
    │   │   └── enonce.md
    │   ├── Python/
    │   │   └── enonce.md
    │   └── XML/
    │       ├── Exercice2.xml
    │       ├── enonce.md
    │       └── xml_avec_erreurs.xml
    ├── Flask/
    │   ├── ajax/
    │   │   ├── __init__.py
    │   │   ├── database.py
    │   │   ├── index.py
    │   │   ├── makefile
    │   │   ├── db/
    │   │   │   └── location.sql
    │   │   ├── static/
    │   │   │   └── js/
    │   │   │       └── script.js
    │   │   └── templates/
    │   │       ├── form.html
    │   │       ├── provinces.html
    │   │       └── villes.html
    │   ├── api/
    │   │   ├── __init__.py
    │   │   ├── database.py
    │   │   ├── index.py
    │   │   ├── makefile
    │   │   ├── db/
    │   │   │   └── location.sql
    │   │   ├── static/
    │   │   │   └── js/
    │   │   │       └── script.js
    │   │   └── templates/
    │   │       ├── form.html
    │   │       ├── provinces.html
    │   │       └── villes.html
    │   ├── cookies/
    │   │   ├── __init__.py
    │   │   ├── database.py
    │   │   ├── index.py
    │   │   ├── makefile
    │   │   ├── db/
    │   │   │   ├── musique.db
    │   │   │   └── musique.sql
    │   │   └── templates/
    │   │       ├── 404.html
    │   │       ├── accueil.html
    │   │       └── artiste.html
    │   ├── db/
    │   │   ├── __init__.py
    │   │   ├── database.py
    │   │   ├── index.py
    │   │   ├── makefile
    │   │   ├── db/
    │   │   │   └── musique.sql
    │   │   └── templates/
    │   │       ├── 2listes-vides.html
    │   │       ├── 2listes.html
    │   │       ├── accueil.html
    │   │       ├── artistes.html
    │   │       └── form.html
    │   ├── files/
    │   │   ├── __init__.py
    │   │   ├── database.py
    │   │   ├── index.py
    │   │   ├── makefile
    │   │   ├── db/
    │   │   │   └── profiles.sql
    │   │   └── templates/
    │   │       ├── confirmation.html
    │   │       ├── formulaire.html
    │   │       └── layout.html
    │   ├── form/
    │   │   ├── __init__.py
    │   │   ├── index.py
    │   │   ├── makefile
    │   │   └── templates/
    │   │       ├── formulaire.html
    │   │       └── merci.html
    │   ├── hello_world/
    │   │   ├── index.py
    │   │   └── makefile
    │   ├── jberger/
    │   │   ├── __init__.py
    │   │   ├── index.py
    │   │   ├── makefile
    │   │   ├── static/
    │   │   │   ├── img/
    │   │   │   └── vendor/
    │   │   │       ├── bootstrap/
    │   │   │       │   ├── css/
    │   │   │       │   │   ├── bootstrap-theme.css
    │   │   │       │   │   └── bootstrap.css
    │   │   │       │   ├── fonts/
    │   │   │       │   │   ├── glyphicons-halflings-regular.eot
    │   │   │       │   │   ├── glyphicons-halflings-regular.ttf
    │   │   │       │   │   ├── glyphicons-halflings-regular.woff
    │   │   │       │   │   └── glyphicons-halflings-regular.woff2
    │   │   │       │   └── js/
    │   │   │       │       ├── bootstrap.js
    │   │   │       │       └── npm.js
    │   │   │       └── jquery/
    │   │   └── templates/
    │   │       ├── accueil.html
    │   │       └── inf3005.html
    │   ├── jberger-extends/
    │   │   ├── __init__.py
    │   │   ├── index.py
    │   │   ├── makefile
    │   │   ├── static/
    │   │   │   ├── img/
    │   │   │   └── vendor/
    │   │   │       ├── bootstrap/
    │   │   │       │   ├── css/
    │   │   │       │   │   ├── bootstrap-theme.css
    │   │   │       │   │   └── bootstrap.css
    │   │   │       │   ├── fonts/
    │   │   │       │   │   ├── glyphicons-halflings-regular.eot
    │   │   │       │   │   ├── glyphicons-halflings-regular.ttf
    │   │   │       │   │   ├── glyphicons-halflings-regular.woff
    │   │   │       │   │   └── glyphicons-halflings-regular.woff2
    │   │   │       │   └── js/
    │   │   │       │       ├── bootstrap.js
    │   │   │       │       └── npm.js
    │   │   │       └── jquery/
    │   │   └── templates/
    │   │       ├── accueil.html
    │   │       ├── inf3005.html
    │   │       └── layout.html
    │   ├── login/
    │   │   ├── __init__.py
    │   │   ├── database.py
    │   │   ├── index.py
    │   │   ├── makefile
    │   │   ├── db/
    │   │   │   └── users.sql
    │   │   └── templates/
    │   │       ├── accueil.html
    │   │       ├── confirmation.html
    │   │       ├── formulaire.html
    │   │       └── layout.html
    │   ├── rest/
    │   │   ├── __init__.py
    │   │   ├── database.py
    │   │   ├── doc.raml
    │   │   ├── index.py
    │   │   ├── makefile
    │   │   ├── person.py
    │   │   ├── schemas.py
    │   │   ├── db/
    │   │   │   └── person.sql
    │   │   └── templates/
    │   │       └── doc.html
    │   └── user-agent/
    │       ├── index.py
    │       └── makefile
    ├── JSON/
    │   ├── library.json
    │   └── timesheet.json
    ├── Python/
    │   ├── classes.py
    │   ├── dictionnaire.py
    │   ├── exception.py
    │   ├── files.py
    │   ├── fonctions.py
    │   ├── hello.py
    │   ├── heritage.py
    │   ├── hilo.py
    │   ├── listes.py
    │   ├── mathsEx.py
    │   ├── service-web.py
    │   ├── strings.py
    │   ├── input/
    │   │   ├── input1
    │   │   └── input2
    │   └── modules/
    │       ├── main.py
    │       ├── person.py
    │       ├── student.py
    │       └── teacher.py
    ├── SQLite/
    │   ├── insert-update.py
    │   ├── musique.sql
    │   ├── no_injection.py
    │   ├── select.py
    │   └── sql_injection.py
    ├── auth/
    │   ├── check.py
    │   ├── insert.py
    │   └── users.sql
    └── email/
        └── gmail.py


### Code Content ###
================================================
File: README.md
================================================
# exemplesINF5190
Exemples présentés dans le cours INF5190.


================================================
File: Ateliers/Ajax/enonce.md
================================================
Ajax
====

Le paradigme Ajax est très répandu en développement web. Il permet, entre autre,
d'améliorer significativement la convivialité des applications web.

Dans cet atelier, il n'est pas permis d'utiliser de librairies simplifiant la
gestion des requêtes Ajax. Il faut donc utiliser l'objet XMLHttpRequest.

Objectif
--------

* Mettre en place le paradigme Ajax

Exercice
--------

1. Créez une application affichant une liste de noms et prénoms de personnes.
   Chaque nom et prénom est un élément ayant toutes les apparences d'un lien
   (curseur, couleur et souligné) mais lorsqu'on clique sur un nom, un appel
   Ajax est fait pour obtenir le reste des informations sur la personne en
   question et ces informations sont affichés sur la page directement.

   Les informations à afficher pour chaque individu sont :
   * le nom complet;
   * le sexe de la personne;
   * l'âge de la personne;
   * le pays et la ville de naissance de la personne.

   Évidemment, vous devez créer une base de données contenant ces informations
   et la route Ajax pour obtenir les données d'une personne.


================================================
File: Ateliers/Api/enonce.md
================================================
API
===

Cet atelier couvre la mise en place d'un API RESTful pour manipuler un catalogue
de livres. Lorsqu'un service retourne des données, c'est toujours en format
JSON. Lorsqu'un service reçoit des données, c'est toujours en format JSON
également.

Testez vos services à l'aide d'un client REST.

Objectifs
---------

* Manipuler du JSON
* Créer des services web REST/JSON
* Manipuler un client REST

Exercices
---------

1. Créez une base de données contenant une table modélisant des livres. Les
   données d'un livre sont :
   * l'id du livre;
   * le titre;
   * l'auteur (un seul auteur par livre);
   * l'année de publication
   * le nombre de pages;
   * le nombre de chapitres.

2. Créez une application Flask avec une route `GET` à l'URL `/api/livres/` qui
   retourne la liste de tous les livres (l'id et le titre seulement).

3. Créez une route `GET` à l'URL `/api/livre/<id>` qui retourne toutes les
   données d'un livre.

4. Créez une route `POST` à l'URL `/api/livre` qui sert à créer un nouveau
   livre. La route doit recevoir un objet JSON contenant toutes les données du
   livre, sauf l'id.

5. Créez une route `DELETE` à l'URL `/api/livre/<id>` qui sert à supprimer un
   livre.


================================================
File: Ateliers/BD/enonce.md
================================================
Utiliser une base de données avec Python
========================================

L'utilisation d'une base de données est un élément incontournable en
développement de logiciels. La grande majorité des applications web en
utilisent. Dans cet atelier, nous allons utiliser la base de données SQLite avec
Python.

Objectifs
---------

* Manipuler une BD SQLite.
* Utiliser la librairie _built-in_ `sqlite3`.

Exercices
---------

1. À partir de la console SQLite, créez une base de données (avec `.read`) en
   utilisant ce [script SQL](https://github.com/jacquesberger/exemplesINF3005/blob/master/SQLite/musique.sql).

2. Écrivez un programme qui va afficher à l'écran la liste numérotée des artistes
   dans la BD. Lorsque l'utilisateur choisit un artiste en particulier (en
   saisissant son numéro au clavier), le programme affiche la liste des albums
   de cet artiste (regardez la fonction `input()` et `int()` pour la saisie
   au clavier).

3. Le fichier [input.txt](input.txt) contient des données sur des albums de
   musique. Chaque ligne correspond à un album, avec 3 champs :
   * le premier champ est le nom de l'artiste;
   * le deuxième champ est le nom de l'album;
   * le troisième champ est l'année de publication de l'album.

   Les champs sont séparés par un `|`.

   Écrivez un programme qui va lire le fichier et ajouter ces albums à la base
   de données. Si l'artiste existe déjà, utilisez l'id de l'artiste existant,
   sinon créez un nouvel artiste (inventez les valeurs que vous ne connaissez
   pas - ex. `est_solo` et `nombre_individus`). Prenez n'importe quel maison
   d'édition pour les albums.


================================================
File: Ateliers/BD/input.txt
================================================
The Agonist|Once Only Imagined|2007
Alice Cooper|Constrictor|1986
Alice Cooper|Raise Your Fist and Yell|1987
Arch Enemy|War Eternal|2014
At the Gates|Slaughter of the Soul|1995
Blind Guardian|Battalions of Fear|1988
Blind Guardian|Tokyo Tales|1993
Bruce Dickinson|Accident of Birth|1997
Dark Tranquillity|Construct|2013
Deftones|Around the Fur|1997
Epica|The Holographic Principle|2016


================================================
File: Ateliers/Flask-1/enonce.md
================================================
Introduction à Flask
====================

Flask est le microframework qui sera utilisé durant tout le trimestre. Il y aura
plusieurs ateliers sur ce sujet. Ce premier atelier sert mettre les bases pour
le reste.

Objectifs
---------

* Installer Flask.
* Définir des routes et servir des documents HTML.
* Recevoir les données d'un formulaire.

Exercices
---------

1. Créez une application affichant un formulaire sur sa page d'accueil (route
   `/`). Le formulaire doit permettre des données de différents types :
   * un champ texte (`input type="text"`);
   * un choix entre plusieurs valeurs (`input type="radio"`);
   * une liste déroulante (`select`).

2. Ajoutez une route pour recevoir les données du formulaire. Vous devez valider
   que l'utilisateur a bien remplit la totalité des champs du formulaire. Si les
   données ne sont pas complètes, redirigez l'utilisateur vers une page avec un
   message d'erreur. Si les données sont complètes, redirigez l'utilisateur vers
   une page de remerciement.

3. Lorsque les données du formulaire sont valides, enregistrez-les dans un
   fichier sur le serveur (un log).


================================================
File: Ateliers/Flask-2/enonce.md
================================================
Construire une application web avec Flask
=========================================

Il est temps de rassembler tous les éléments vus en classe :
* Flask
* SQLite
* Jinja2

Objectifs
---------

* Construire une application complète.

Exercices
---------

1. Construisez une base de données SQLite avec une table `Personne` contenant
   les champs `nom`, `prenom`, `age`.

2. Construisez une application Flask avec au moins 3 routes :
    * une route affichant un formulaire avec les champs nécessaires pour créer
      une personne;
    * une route recevant les données du formulaire et ajoutant les données dans
      la base de données (attention à l'injection SQL);
    * une route affichant la liste des personnes dans un tableau (élément
      `table`).

3. Ajoutez une validation dans la route qui reçoit les données du formulaire
   pour vous assurer que tous les champs sont remplis. Si un ou plusieurs champs
   ne sont pas remplis, affichez le formulaire avec un message d'erreur.
   Assurez-vous de ne pas perdre les données du formulaire dans le processus
   (lorsqu'on affiche le formulaire avec le message d'erreur, les valeurs du
   formulaire doivent être dans les champs du formulaire).

4. La liste de personnes doit être triée en ordre croissant de nom de famille.


================================================
File: Ateliers/HTTP/enonce.md
================================================
HTTP
====

Cet atelier vous introduit à l'utilisation des outils de développement de Google
Chrome, notamment pour capturer les requêtes et réponses HTTP et visualiser leur
contenu.

Objectifs
---------

* Utiliser les outils de développement de Chrome.
* Inspecter les requêtes HTTP.

Exercices
---------

1. Quel type de serveur sert le site [uqam.ca](http://www.uqam.ca/)?

2. Quel est l'encodage de caractères retourné par le site [uqam.ca](http://www.uqam.ca/)?

3. À partir de l'adresse de l'[horaire de l'UQAM](https://etudier.uqam.ca/trouver-un-cours), trouvez
   l'URL (et ses paramètres) nécessaire pour obtenir l'horaire du cours INF5190.

4. Modifiez l'URL de l'exercice #3 afin d'obtenir directement l'horaire du cours
   INF2050. Essayez de retirer un ou plusieurs paramètres ou de changer leur
   valeur pour voir le résultat.

5. Capturez les paramètres d'authentification (utilisez des fausses données) dans
   la requête HTTP qui fait l'authentification à l'adresse [Évaluation UQAM - volet enseignant](https://www.apps.uqam.ca/application/evalens/login/login.aspx?EVL_TYPE_UTILISATEUR=ENS).


================================================
File: Ateliers/JSON/Exercice2.json
================================================
{
  "numero_employe": 884,
  "numero_semaine": 4,
  "annee": 2012,
  "jours": [
    [{
      "code_de_projet": 200,
      "minutes": 90
    }, {
      "code_de_projet": 125,
      "minutes": 45
    }, {
      "code_de_projet": 990,
      "minutes": 180
    }, {
      "code_de_projet": 166,
      "minutes": 100
    }],
    [{
      "code_de_projet": 125,
      "minutes": 420
    }],
    [{
      "code_de_projet": 125,
      "minutes": 420
    }],
    [{
      "code_de_projet": 125,
      "minutes": 420
    }, {
      "code_de_projet": 116,
      "minutes": 50
    }],
    [{
      "code_de_projet": 166,
      "minutes": 420
    }],
    [],
    [{
      "code_de_projet": 990,
      "minutes": 30
    }]
  ]
}


================================================
File: Ateliers/JSON/Exercice3.json
================================================
{
  "nom": "Berger",
  "prenom": "Jacques",
  "assurance_maladie": "BERJ12052304",
  "naissance": "1912-05-23",
  "medecin_famille": {
    "nom": "Stevenson",
    "prenom": "Steven",
    "identifiant": "234F3",
    "ville": "Sherbrooke"
  },
  "visites": [{
    "date": "2016-09-01",
    "sujet": "Suivi annuel",
    "description": "Rien à signaler. Renouvellement de la prescription de morphine."
  }, {
    "date": "2016-09-03",
    "sujet": "Blessure au dos",
    "description": "Entorse lombaire. Prescription d'anti-inflammatoires."
  }]
}


================================================
File: Ateliers/JSON/Exercice4.json
================================================
[{
  "sigle": "INF4375",
  "groupe": 50,
  "trimestre": 3,
  "annee": 2016,
  "enseignant": "Jacques Berger",
  "note": "A+"
}, {
  "sigle": "INF2015",
  "groupe": 30,
  "trimestre": 1,
  "annee": 2016,
  "enseignant": "Jacques Berger",
  "note": "A-"
}, {
  "sigle": "INF1256",
  "groupe": 21,
  "trimestre": 2,
  "annee": 2015,
  "enseignant": "François-Xavier Guillemette",
  "note": "A"
}]


================================================
File: Ateliers/JSON/enonce.md
================================================
JSON
====

Le format de sérialisation JSON sera largement utilisé au cours de la session.
Il est important de bien le maîtriser. Cet atelier vise à former l'étudiant à
l'utilisation du JSON.

Objectifs
---------

* Manipuler le format JSON.
* Valider un document JSON.

Exercices
---------

1. À l'aide de [http://jsonlint.com/](http://jsonlint.com/), identifiez et
   corrigez les erreurs dans ce [document](json_avec_erreurs.json).

2. Transformez ce [document](json_sans_erreurs.json) pour que les jours de la
   semaine soient dans un tableau plutôt que des propriétés.

3. Modélisez un document JSON contenant un dossier médical, avec les champs
   suivants :
   * nom;
   * prénom;
   * numéro d'assurance maladie;
   * date de naissance;
   * médecin de famille (nom, prénom, identifiant au collègue des médecins,
     ville de pratique);
   * une liste de visites (pour chaque visite, on conserve la date, le sujet de
     la visite et une description du médecin).

4. Modélisez un document JSON contenant la liste de cours que vous avez suivi.
   Pour chaque cours, on indique :
   * le sigle,
   * le groupe,
   * le trimestre (1 pour hiver, 2 pour été, 3 pour automne),
   * l'année,
   * le nom de l'enseignant,
   * la note lettrée obtenue.

Solutions
---------

* [Exercice #2](Exercice2.json)
* [Exercice #3](Exercice3.json)
* [Exercice #4](Exercice4.json)


================================================
File: Ateliers/JSON/json_avec_erreurs.json
================================================
{
    "numero_employe": 884,
    "numero_semaine": 4,
    "annee": 2012,
    lundi: [
        {
            "code_de_projet": 200
            "minutes": 90
        },
        {
            "code_de_projet": 125,
            "minutes" 45
        },
        {
            "code_de_projet": 990,
            "minutes": 180
        },
        {
            "code_de_projet": 166,
            "minutes": 100
        }
    ],
    "mardi": [
        {
            "code_de_projet": 125,
            minutes: 420
        }
    ],
    "mercredi": [
        {
            "code_de_projet": 125,
            "minutes": 420
        }
    ],
    "jeudi" {
        {
            "code_de_projet": 125,
            "minutes": 420
        }
        {
            "code_de_projet": 116,
            "minutes": 50
        }
    },
    "vendredi": [
        {
            "code_de_projet": 166,
            "minutes": 420
        }
    ],
    "samedi": [],
    "dimanche: [
        {
            "code_de_projet": 990
            "minutes": 30
        }
    ]


================================================
File: Ateliers/JSON/json_sans_erreurs.json
================================================
{
    "numero_employe": 884,
    "numero_semaine": 4,
    "annee": 2012,
    "lundi": [
        {
            "code_de_projet": 200,
            "minutes": 90
        },
        {
            "code_de_projet": 125,
            "minutes": 45
        },
        {
            "code_de_projet": 990,
            "minutes": 180
        },
        {
            "code_de_projet": 166,
            "minutes": 100
        }
    ],
    "mardi": [
        {
            "code_de_projet": 125,
            "minutes": 420
        }
    ],
    "mercredi": [
        {
            "code_de_projet": 125,
            "minutes": 420
        }
    ],
    "jeudi": [
        {
            "code_de_projet": 125,
            "minutes": 420
        },
        {
            "code_de_projet": 116,
            "minutes": 50
        }
    ],
    "vendredi": [
        {
            "code_de_projet": 166,
            "minutes": 420
        }
    ],
    "samedi": [],
    "dimanche": [
        {
            "code_de_projet": 990,
            "minutes": 30
        }
    ]
}

================================================
File: Ateliers/MailAuth/enonce.md
================================================
Courriels et authentification
=============================

Les applications web utilisent souvent le courriel pour communiquer avec ses
utilisateurs. Notamment, le processus d'authentification implique généralement
une communication par courriel afin de valider l'adresse courriel de
l'utilisateur et pour la procédure de recouvrement en cas de perte de mot de
passe.

Objectifs
---------

* Envoyer des courriels
* Manipuler l'authentification dans une application web

Exercices
---------

1. Créez un compte [Gmail](https://www.google.com/gmail/) spécifiquement pour le
   cours INF5190.

2. À l'aide de cet [exemple](https://github.com/jacquesberger/exemplesINF5190/blob/master/email/gmail.py),
   envoyez un courriel à partir de l'adresse créée à l'exercice précédent.

3. Faites une copie de l'[exemple de _login_](https://github.com/jacquesberger/exemplesINF5190/tree/master/Flask/login) vu en classe
   et modifiez-le pour saisir le nom et le prénom de l'utilisateur lors de son
   inscription. Ensuite, lorsque l'utilisation est connecté à l'application,
   affichez-lui une salutation avec son nom complet sur la page d'accueil.

4. Mettez en place une procédure de validation d'adresse courriel lors de
   l'inscription d'un nouvel utilisateur. Utilisez la technique présentée en
   classe, c'est-à-dire :
   * l'utilisateur s'inscrit sur le site;
   * le site génère un jeton unique et aléatoire pour l'utilisateur;
   * le site envoie un courriel à l'utilisateur avec lien pour valider son
     adresse courriel (exemple :
     `http://localhost:5000/activation/<jeton>`);
   * l'utilisateur clique sur le lien.

   Si l'utilisateur n'a pas validé son adresse courriel, un message apparaît
   pour l'aviser sur la page d'accueil (note : ajoutez un booléen dans la BD
   pour indiquer si l'adresse a été validée ou non).


================================================
File: Ateliers/MotDePasse/enonce.md
================================================
Enregistrement de mot de passe
==============================

La gestion des mots de passe est une tâche délicate et complexe. La technique
recommandée dans cet atelier est la technique avec le salt et la fonction de
hachage, comme présenté dans cet <a href="https://github.com/jacquesberger/exemplesINF5190/blob/master/auth/insert.py">exemple</a>.

Objectifs
---------

* Enregistrer des mots de passe
* Intégrer cet enregistrement de mot de passe à une application Flask

Exercices
---------

1. Créez une base de données servant à stocker les données d'un compte
   utilisateur :
   * nom;
   * prénom;
   * courriel;
   * date d'inscription;
   * salt;
   * haché du mot de passe.

2. Écrivez une application Flask où la page d'accueil est un formulaire
   d'inscription contenant les champs suivants :
   * nom;
   * prénom;
   * courriel;
   * confirmation du courriel (entrer une deuxième fois le courriel);
   * mot de passe (champ texte de type `password`).

   Note : il n'y a pas de nom d'utilisateur car on utiliserait l'adresse courriel
   comme nom d'utilisateur.

   Lors de la soumission du formulaire, vous devez valider que tous les champs ont
   été remplis, sinon vous affichez un message d'erreur et l'utilisateur doit
   recommencer. Si les données sont valides, vous écrivez les données de
   l'utilisateur dans la base de données. La date d'inscription est générée
   automatiquement selon la date du jour.

3. Ajoutez quelques règles de validation au mot de passe :
   * minimum de 8 caractères;
   * au moins une lettre majuscule et une lettre minuscule;
   * au moins un chiffre
   * au moins un caractère de ponctuation.


================================================
File: Ateliers/Python/enonce.md
================================================
Introduction à Python
=====================

Apprendre un nouveau langage de programmation demande de la pratique. Dans cet
atelier, vous allez vous exercer avec les éléments syntaxiques vus en classe.
Vous allez développer un logiciel simple. Il s'agit d'un énoncé de TP d'un cours
d'initiation à la programmation.

Objectifs
---------

* Manipuler le programme `python3`.
* Écrire du code Python.

Exercice
--------

Vous devez faire un logiciel qui lira un ensemble de commandes d'articles dans
un fichier et qui créera des factures pour les clients concernés à l'aide des
éléments de Python vus en classe :
* fichiers;
* conditions;
* boucles;
* classes;
* listes;
* dictionnaires.

Voici un exemple de fichier d'entrée :
```
0001 RTU43245 3 69.99 FP
0001 RCU83364 1 169.99 F
0001 POP64483 12 1.99 P
0001 KOP77442 100 10.99
0067 RTU43245 35 69.99 FP
0088 RTU43245 13 69.99 FP
0088 UYT11233 5 10.75
```

La première colonne est un numéro de client. La deuxième colonne est un numéro
de produit. La troisième colonne est une quantité. La quatrième colonne est un
prix unitaire. La dernière colonne indique les taxes à calculer sur le produit.

Vous devez produire une facture dans un fichier texte pour chaque client qui
commande des produits. Dans le fichier d'entrée, tous les produits d'un même
client seront toujours consécutifs. Les lettres de la dernière colonne indique
quelles taxes sont applicables sur le produit (F = taxe fédérale;
P = taxe provinciale; FP = les deux taxes; rien signifie que le produit n'est
pas taxé).

Le fichier contenant la facture pour le client 0001 doit se nommer 0001.txt. Le
nom du fichier correspond donc au numéro du client avec l'extension .txt.

Lorsqu'un client achète plus de 100 articles dans une même commande, un rabais
de 15% est appliqué sur le total de la facture.

Voici un exemple de facture à produire :
```
Client numéro 0001

              No de produit  Qte      Prix  Total (tx)
Produit #1    RTU43245         3     69.99      241.41
Produit #2    RCU83364         1    169.99      178.49
Produit #3    POP64483        12      1.99       26.26
Produit #4    KOP77442       100     10.99     1099.00

Total avant rabais : 1545.16
Rabais : 231.77
Total : 1313.39
```


================================================
File: Ateliers/XML/Exercice2.xml
================================================
<?xml version="1.0" encoding="utf-8"?>
<dossier>
  <nom>Berger</nom>
  <prenom>Jacques</prenom>
  <NAM>BERJ99999901</NAM>
  <medecin>
    <nom>Stevenson</nom>
    <prenom>Steven</prenom>
    <identifiant>99330-10</identifiant>
    <ville>Sorel-Tracy</ville>
  </medecin>
  <visites>
    <visite>
      <date>2010-01-12</date>
      <sujet>Perte de cheveux</sujet>
      <description>Le patient ne perd pas ses cheveux, il a plutôt des allucinations. Des calmants ont été prescrits.</description>
    </visite>
    <visite>
      <date>2010-01-28</date>
      <sujet>Blessure au genou</sujet>
      <description>Les calmants provoquent des allucinations plus fortes et le patient a fait une mauvaise chute. Des anti-inflammatoires ont été prescrits. La prise de calmants est suspendu.</description>
    </visite>
    <visite>
      <date>2010-02-14</date>
      <sujet>Dépression</sujet>
      <description>Le patient est déprimé car il est seul à la St-Valentin. Aucune prescription, un simple câlin a réglé la situation.</description>
    </visite>
  </visites>
</dossier>


================================================
File: Ateliers/XML/enonce.md
================================================
XML
===

Le format XML n'est plus aussi populaire qu'à l'époque mais il demeure un
format assez répandu dans les organisations. Ce laboratoire vise à initier
l'étudiant au XML de base.

Objectifs
---------

* Manipuler le format XML.
* Valider un document XML.

Exercices
---------

1. À l'aide de [http://www.xmlvalidation.com/](http://www.xmlvalidation.com/), identifiez et
   corrigez les erreurs dans ce [document](xml_avec_erreurs.xml).

2. Modélisez un document XML contenant un dossier médical, avec les champs
   suivants :
   * nom;
   * prénom;
   * numéro d'assurance maladie;
   * date de naissance;
   * médecin de famille (nom, prénom, identifiant au collègue des médecins,
     ville de pratique);
   * une liste de visites (pour chaque visite, on conserve la date, le sujet de
     la visite et une description du médecin).

Solutions
---------

* [Exercice #2](Exercice2.xml)


================================================
File: Ateliers/XML/xml_avec_erreurs.xml
================================================
<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<library>
  <documents>
    <document type="book">
      <title>Théorie de la musique</title>
      <author>A. Danhauser</author>
      <year><1996</year>
    </document>
    <document type=book>
      <title>Test-Driven Development by Example</title>
      <author>Kent Beck</author>
      <year>2003</year>
    </document>
    <document type="book">
      <title>Design Patterns - Elements of Reusable Object-Oriented Software</title>
      <author>Erich Gamma</author>
      <author>Richard Helm</author>
      <author>Ralph Johnson</author>
      <author>John Vlissides</author>
      <year>1995</year>
    </document>
    <document type="article'>
      <title>XML Schema</title>
      <author>Eric van der Vlist</author>
      <year>2001</year>
  </document>
</library>


================================================
File: Flask/ajax/database.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import sqlite3


class Database:
    def __init__(self):
        self.connection = None

    def get_connection(self):
        if self.connection is None:
            self.connection = sqlite3.connect('db/location.db')
        return self.connection

    def disconnect(self):
        if self.connection is not None:
            self.connection.close()

    def get_pays(self):
        cursor = self.get_connection().cursor()
        cursor.execute("select id, nom from pays")
        pays = cursor.fetchall()
        return [(un_pays[0], un_pays[1]) for un_pays in pays]

    def get_provinces(self, pays_id):
        cursor = self.get_connection().cursor()
        cursor.execute("select id, nom from provinces where pays_id = ?",
                       (pays_id,))
        provinces = cursor.fetchall()
        return [(prov[0], prov[1]) for prov in provinces]

    def get_villes(self, province_id):
        cursor = self.get_connection().cursor()
        cursor.execute("select id, nom from villes where province_id = ?",
                       (province_id,))
        villes = cursor.fetchall()
        return [(une_ville[0], une_ville[1]) for une_ville in villes]


================================================
File: Flask/ajax/index.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask
from flask import render_template
from flask import g
from .database import Database

app = Flask(__name__, static_url_path="", static_folder="static")


def get_db():
    db = getattr(g, '_database', None)
    if db is None:
        g._database = Database()
    return g._database


@app.teardown_appcontext
def close_connection(exception):
    db = getattr(g, '_database', None)
    if db is not None:
        db.disconnect()


@app.route('/')
def form():
    pays = get_db().get_pays()
    return render_template('form.html', pays=pays)


@app.route('/provinces/<pays_id>')
def provinces(pays_id):
    provinces = get_db().get_provinces(pays_id)
    return render_template('provinces.html', provinces=provinces)


@app.route('/villes/<province_id>')
def villes(province_id):
    villes = get_db().get_villes(province_id)
    return render_template('villes.html', villes=villes)


================================================
File: Flask/ajax/makefile
================================================
export FLASK_APP=index.py

run:
	flask run


================================================
File: Flask/ajax/db/location.sql
================================================
create table pays (
  id integer primary key,
  nom varchar(50)
);

create table provinces (
  id integer primary key,
  nom varchar(50),
  pays_id integer,
  foreign key (pays_id) references pays(id)
);

create table villes (
  id integer primary key,
  nom varchar(50),
  province_id integer,
  foreign key (province_id) references provinces(id)
);

insert into pays(id, nom) values(1, 'Canada');
insert into pays(id, nom) values(2, 'Chine');
insert into pays(id, nom) values(3, 'Cambodge');

insert into provinces(id, nom, pays_id) values(1, 'Ontario', 1);
insert into provinces(id, nom, pays_id) values(2, 'Alberta', 1);
insert into provinces(id, nom, pays_id) values(3, 'Jiangxi', 2);
insert into provinces(id, nom, pays_id) values(4, 'Heilongjiang', 2);
insert into provinces(id, nom, pays_id) values(5, 'Kampong Chhnang', 3);
insert into provinces(id, nom, pays_id) values(6, 'Rotanah Kiri', 3);

insert into villes(id, nom, province_id) values(1, 'Toronto', 1);
insert into villes(id, nom, province_id) values(2, 'Mississauga', 1);
insert into villes(id, nom, province_id) values(3, 'Edmonton', 2);
insert into villes(id, nom, province_id) values(4, 'Calgary', 2);
insert into villes(id, nom, province_id) values(5, 'Zhangshu', 3);
insert into villes(id, nom, province_id) values(6, 'Dexing', 3);
insert into villes(id, nom, province_id) values(7, 'Harbin', 4);
insert into villes(id, nom, province_id) values(8, 'Mudanjiang', 4);
insert into villes(id, nom, province_id) values(9, 'Kampong Chhnang', 5);
insert into villes(id, nom, province_id) values(10, 'Krang Ta Mun', 5);
insert into villes(id, nom, province_id) values(11, 'Banlung', 6);
insert into villes(id, nom, province_id) values(12, 'Veun Sai', 6);


================================================
File: Flask/ajax/static/js/script.js
================================================
// Copyright 2017 Jacques Berger
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Lancée lorsque le champ de pays change. Met à jour la liste des provinces.
function onPaysChange() {
  var champProvince = document.getElementById("champ-province");

  var pays = document.getElementById("champ-pays").value;
  if (pays === "") {
    champProvince.value = "";
    champProvince.disabled = true;
  } else {
    champProvince.disabled = false;

    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function() {
      if (xhr.readyState === XMLHttpRequest.DONE) {
        if (xhr.status === 200) {
          champProvince.innerHTML = xhr.responseText;
          champProvince.value = "";
        } else {
          console.log('Erreur avec le serveur');
        }
      }
    };

    xhr.open("GET", "/provinces/"+pays, true);
    xhr.send();
  }
  var champVille = document.getElementById("champ-ville");
  champVille.value = "";
  champVille.disabled = true;
}

// Lancée lorsque la province change. Met la liste des villes à jour.
function onProvinceChange() {
  var champVille = document.getElementById("champ-ville");

  var province = document.getElementById("champ-province").value;
  if (province === "") {
    champVille.value = "";
    champVille.disabled = true;
  } else {
    champVille.disabled = false;

    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function() {
      if (xhr.readyState === XMLHttpRequest.DONE) {
        if (xhr.status === 200) {
          champVille.innerHTML = xhr.responseText;
          champVille.value = "";
        } else {
          console.log('Erreur avec le serveur');
        }
      }
    };

    xhr.open("GET", "/villes/"+province, true);
    xhr.send();
  }
}


================================================
File: Flask/ajax/templates/form.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Identité</title>
<script src="/js/script.js"></script>
</head>
<body>
	<form action="/envoyer" method="post">
		<div>
			<table>
				<tr>
					<td><label for="champ-nom">Nom :</label>
					</td>
					<td><input type="text" id="champ-nom" name="name" size="40">
					</td>
				</tr>
				<tr>
					<td><label for="champ-prenom">Prénom :</label>
					</td>
					<td><input type="text" id="champ-prenom" name="fname" size="40">
					</td>
				</tr>
				<tr>
					<td><label for="champ-pays">Pays :</label>
					</td>
					<td>
            <select id="champ-pays" name="pays" onchange="onPaysChange();">
              <option value="">Aucun</option>
                {% for un_pays in pays %}
                  <option value="{{ un_pays[0] }}">{{ un_pays[1] }}</li>
                {% endfor %}
            </select>
					</td>
				</tr>
				<tr>
					<td><label for="champ-province">Province :</label>
					</td>
					<td>
            <select id="champ-province" name="province" onchange="onProvinceChange();" disabled>
              <option value="">Aucune</option>
            </select>
					</td>
				</tr>
				<tr>
					<td><label for="champ-ville">Ville :</label>
					</td>
					<td>
            <select id="champ-ville" name="ville" disabled>
              <option value="">Aucune</option>
            </select>
					</td>
				</tr>
			</table>
			<br>
			<input type="submit" value="Envoyer">
		</div>
	</form>
</body>
</html>


================================================
File: Flask/ajax/templates/provinces.html
================================================
<option value="">Aucune</option>
{% for une_province in provinces %}
  <option value="{{ une_province[0] }}">{{ une_province[1] }}</option>
{% endfor %}


================================================
File: Flask/ajax/templates/villes.html
================================================
<option value="">Aucune</option>
{% for une_ville in villes %}
  <option value="{{ une_ville[0] }}">{{ une_ville[1] }}</option>
{% endfor %}


================================================
File: Flask/api/database.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import sqlite3


class Database:
    def __init__(self):
        self.connection = None

    def get_connection(self):
        if self.connection is None:
            self.connection = sqlite3.connect('db/location.db')
        return self.connection

    def disconnect(self):
        if self.connection is not None:
            self.connection.close()

    def get_pays(self):
        cursor = self.get_connection().cursor()
        cursor.execute("select id, nom from pays")
        pays = cursor.fetchall()
        return [(un_pays[0], un_pays[1]) for un_pays in pays]

    def add_pays(self, nom):
        connection = self.get_connection()
        connection.execute("insert into pays(nom) values(?)", (nom,))
        connection.commit()

    def get_provinces(self, pays_id):
        cursor = self.get_connection().cursor()
        cursor.execute("select id, nom from provinces where pays_id = ?",
                       (pays_id,))
        provinces = cursor.fetchall()
        return [(prov[0], prov[1]) for prov in provinces]

    def get_villes(self, province_id):
        cursor = self.get_connection().cursor()
        cursor.execute("select id, nom from villes where province_id = ?",
                       (province_id,))
        villes = cursor.fetchall()
        return [(une_ville[0], une_ville[1]) for une_ville in villes]


================================================
File: Flask/api/index.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask
from flask import render_template
from flask import g
from flask import jsonify
from flask import request
from .database import Database

app = Flask(__name__, static_url_path="", static_folder="static")


def get_db():
    db = getattr(g, '_database', None)
    if db is None:
        g._database = Database()
    return g._database


@app.teardown_appcontext
def close_connection(exception):
    db = getattr(g, '_database', None)
    if db is not None:
        db.disconnect()


@app.route('/')
def form():
    pays = get_db().get_pays()
    return render_template('form.html', pays=pays)


@app.route('/provinces/<pays_id>')
def provinces(pays_id):
    provinces = get_db().get_provinces(pays_id)
    return render_template('provinces.html', provinces=provinces)


@app.route('/villes/<province_id>')
def villes(province_id):
    villes = get_db().get_villes(province_id)
    return render_template('villes.html', villes=villes)


@app.route('/api/pays/', methods=["GET", "POST"])
def liste_pays():
    if request.method == "GET":
        pays = get_db().get_pays()
        data = [{"nom": each[1], "_id": each[0]} for each in pays]
        return jsonify(data)
    else:
        data = request.get_json()
        get_db().add_pays(data["nom"])
        return "", 201


@app.route('/api/provinces/<pays_id>')
def liste_provinces(pays_id):
    provinces = get_db().get_provinces(pays_id)
    data = [{"nom": each[1], "_id": each[0]} for each in provinces]
    return jsonify(data)


@app.route('/api/villes/<province_id>')
def liste_villes(province_id):
    villes = get_db().get_villes(province_id)
    data = [{"nom": each[1], "_id": each[0]} for each in villes]
    return jsonify(data)


================================================
File: Flask/api/makefile
================================================
export FLASK_APP=index.py

run:
	flask run


================================================
File: Flask/api/db/location.sql
================================================
create table pays (
  id integer primary key,
  nom varchar(50)
);

create table provinces (
  id integer primary key,
  nom varchar(50),
  pays_id integer,
  foreign key (pays_id) references pays(id)
);

create table villes (
  id integer primary key,
  nom varchar(50),
  province_id integer,
  foreign key (province_id) references provinces(id)
);

insert into pays(id, nom) values(1, 'Canada');
insert into pays(id, nom) values(2, 'Chine');
insert into pays(id, nom) values(3, 'Cambodge');

insert into provinces(id, nom, pays_id) values(1, 'Ontario', 1);
insert into provinces(id, nom, pays_id) values(2, 'Alberta', 1);
insert into provinces(id, nom, pays_id) values(3, 'Jiangxi', 2);
insert into provinces(id, nom, pays_id) values(4, 'Heilongjiang', 2);
insert into provinces(id, nom, pays_id) values(5, 'Kampong Chhnang', 3);
insert into provinces(id, nom, pays_id) values(6, 'Rotanah Kiri', 3);

insert into villes(id, nom, province_id) values(1, 'Toronto', 1);
insert into villes(id, nom, province_id) values(2, 'Mississauga', 1);
insert into villes(id, nom, province_id) values(3, 'Edmonton', 2);
insert into villes(id, nom, province_id) values(4, 'Calgary', 2);
insert into villes(id, nom, province_id) values(5, 'Zhangshu', 3);
insert into villes(id, nom, province_id) values(6, 'Dexing', 3);
insert into villes(id, nom, province_id) values(7, 'Harbin', 4);
insert into villes(id, nom, province_id) values(8, 'Mudanjiang', 4);
insert into villes(id, nom, province_id) values(9, 'Kampong Chhnang', 5);
insert into villes(id, nom, province_id) values(10, 'Krang Ta Mun', 5);
insert into villes(id, nom, province_id) values(11, 'Banlung', 6);
insert into villes(id, nom, province_id) values(12, 'Veun Sai', 6);


================================================
File: Flask/api/static/js/script.js
================================================
// Copyright 2017 Jacques Berger
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Lancée lorsque le champ de pays change. Met à jour la liste des provinces.

function onPaysChange() {
  var champProvince = document.getElementById("champ-province");

  var pays = document.getElementById("champ-pays").value;
  if (pays === "") {
    champProvince.value = "";
    champProvince.disabled = true;
  } else {
    champProvince.disabled = false;

    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function() {
      if (xhr.readyState === XMLHttpRequest.DONE) {
        if (xhr.status === 200) {
          champProvince.innerHTML = xhr.responseText;
          champProvince.value = "";
        } else {
          console.log('Erreur avec le serveur');
        }
      }
    };

    xhr.open("GET", "/provinces/"+pays, true);
    xhr.send();
  }
  var champVille = document.getElementById("champ-ville");
  champVille.value = "";
  champVille.disabled = true;
}

// Lancée lorsque la province change. Met la liste des villes à jour.
function onProvinceChange() {
  var champVille = document.getElementById("champ-ville");

  var province = document.getElementById("champ-province").value;
  if (province === "") {
    champVille.value = "";
    champVille.disabled = true;
  } else {
    champVille.disabled = false;

    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function() {
      if (xhr.readyState === XMLHttpRequest.DONE) {
        if (xhr.status === 200) {
          champVille.innerHTML = xhr.responseText;
          champVille.value = "";
        } else {
          console.log('Erreur avec le serveur');
        }
      }
    };

    xhr.open("GET", "/villes/"+province, true);
    xhr.send();
  }
}

function sendPays() {
  var pays = document.getElementById("nouveau_pays").value;
  if (pays !== "") {
    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function() {
      if (xhr.readyState === XMLHttpRequest.DONE) {
        if (xhr.status === 201) {
          alert('Pays ajouté à la liste');
        } else {
          console.log('Erreur avec le serveur');
        }
      }
    };

    xhr.open("POST", "/api/pays/", true);
    xhr.setRequestHeader("Content-Type", "application/json");
    xhr.send(JSON.stringify({nom:pays}));
  }
}


================================================
File: Flask/api/templates/form.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Identité</title>
<script src="/js/script.js"></script>
</head>
<body>
	<form action="/envoyer" method="post">
		<div>
			<table>
				<tr>
					<td><label for="champ-nom">Nom :</label>
					</td>
					<td><input type="text" id="champ-nom" name="name" size="40">
					</td>
				</tr>
				<tr>
					<td><label for="champ-prenom">Prénom :</label>
					</td>
					<td><input type="text" id="champ-prenom" name="fname" size="40">
					</td>
				</tr>
				<tr>
					<td><label for="champ-pays">Pays :</label>
					</td>
					<td>
            <select id="champ-pays" name="pays" onchange="onPaysChange();">
              <option value="">Aucun</option>
                {% for un_pays in pays %}
                  <option value="{{ un_pays[0] }}">{{ un_pays[1] }}</li>
                {% endfor %}
            </select>
					</td>
				</tr>
				<tr>
					<td><label for="champ-province">Province :</label>
					</td>
					<td>
            <select id="champ-province" name="province" onchange="onProvinceChange();" disabled>
              <option value="">Aucune</option>
            </select>
					</td>
				</tr>
				<tr>
					<td><label for="champ-ville">Ville :</label>
					</td>
					<td>
            <select id="champ-ville" name="ville" disabled>
              <option value="">Aucune</option>
            </select>
					</td>
				</tr>
			</table>
			<br>
			<input type="submit" value="Envoyer">
		</div>
	</form>
  <p>
    <label for="nouveau_pays">Nouveau pays : </label>
    <input type="text" name="nouveau" id="nouveau_pays" maxlength="20">
    <button onclick="sendPays();">Créer</button>
  </p>
</body>
</html>


================================================
File: Flask/api/templates/provinces.html
================================================
<option value="">Aucune</option>
{% for une_province in provinces %}
  <option value="{{ une_province[0] }}">{{ une_province[1] }}</option>
{% endfor %}


================================================
File: Flask/api/templates/villes.html
================================================
<option value="">Aucune</option>
{% for une_ville in villes %}
  <option value="{{ une_ville[0] }}">{{ une_ville[1] }}</option>
{% endfor %}


================================================
File: Flask/cookies/database.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import sqlite3


def build_artist_dictionary(row):
    return {"id": row[0], "nom": row[1], "est_solo": row[2],
            "nombre_individus": row[3]}


class Database:
    def __init__(self):
        self.connection = None

    def get_connection(self):
        if self.connection is None:
            self.connection = sqlite3.connect('db/musique.db')
        return self.connection

    def disconnect(self):
        if self.connection is not None:
            self.connection.close()

    def get_artists(self):
        cursor = self.get_connection().cursor()
        cursor.execute(("select id, nom, est_solo,"
                        " nombre_individus from artiste"))
        artists = cursor.fetchall()
        return [build_artist_dictionary(each) for each in artists]

    def get_artist(self, identifier):
        cursor = self.get_connection().cursor()
        cursor.execute(("select id, nom, est_solo, nombre_individus "
                        "from artiste where id = ?"), (identifier,))
        artist = cursor.fetchone()
        if artist is None:
            return None
        else:
            return build_artist_dictionary(artist)


================================================
File: Flask/cookies/index.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask
from flask import render_template
from flask import g
from flask import make_response
from flask import request
from .database import Database

app = Flask(__name__)


def get_db():
    db = getattr(g, '_database', None)
    if db is None:
        g._database = Database()
    return g._database


@app.teardown_appcontext
def close_connection(exception):
    db = getattr(g, '_database', None)
    if db is not None:
        db.disconnect()


@app.route('/')
def start_page():
    artists = get_db().get_artists()
    last_id = request.cookies.get('last')
    last_artist = None
    if last_id is not None:
        last_artist = get_db().get_artist(last_id)

    return render_template('accueil.html', artists=artists, last=last_artist)


@app.route('/artiste/<identifier>')
def artist_page(identifier):
    artist = get_db().get_artist(identifier)
    if artist is None:
        return render_template('404.html'), 404
    else:
        response = make_response(render_template('artiste.html',
                                                 artist=artist))
        response.set_cookie("last", identifier)
        return response


================================================
File: Flask/cookies/makefile
================================================
export FLASK_APP=index.py

run:
	flask run


================================================
File: Flask/cookies/db/musique.sql
================================================
create table artiste (
  id integer primary key,
  nom varchar(25),
  est_solo boolean,
  nombre_individus integer
);

insert into artiste (nom, est_solo, nombre_individus) values ('Michael Jackson', 1, 1);
insert into artiste (nom, est_solo, nombre_individus) values ('Michael Buble', 1, 1);
insert into artiste (nom, est_solo, nombre_individus) values ('Elvis Presley', 1, 1);
insert into artiste (nom, est_solo, nombre_individus) values ('Iron Maiden', 0, 6);
insert into artiste (nom, est_solo, nombre_individus) values ('Metallica', 0, 4);
insert into artiste (nom, est_solo, nombre_individus) values ('The Sweet Database', 0, 9);
insert into artiste (nom, est_solo, nombre_individus) values ('Computing Gods', 0, 3);


================================================
File: Flask/cookies/templates/404.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Artiste inconnu</title>
</head>
<body>
  <h1>Bonsoir!</h1>
  <p>L'artiste que vous avez demandé est introuvable.</p>
  <p><a href="/">Retour à la page d'accueil</a></p>
</body>
</html>


================================================
File: Flask/cookies/templates/accueil.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Liste</title>
</head>
<body>
  <h1>Bonsoir!</h1>
  <p>Voici la liste des artistes</p>
  <ul>
    {% for artist in artists %}
      <li><a href="/artiste/{{ artist.id }}">{{ artist.nom }}</a></li>
    {% endfor %}
  </ul>
  {% if last %}
    <p>Le dernier artiste visité est <a href="/artiste/{{ last.id }}">{{ last.nom }}</a>.</p>
  {% endif %}
</body>
</html>


================================================
File: Flask/cookies/templates/artiste.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>{{ artist.nom }}</title>
</head>
<body>
  <h1>Bonsoir, fan de {{ artist.nom }}!</h1>
  {% if artist.est_solo %}
    <p>Il s'agit d'un artiste solo.</p>
  {% else %}
    <p>Il s'agit d'un groupe.</p>
    <p>Le groupe est composé de {{ artist.nombre_individus }} personnes.</p>
  {% endif %}
  <p><a href="/">Retour</a></p>
</body>
</html>


================================================
File: Flask/db/database.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import sqlite3


class Database:
    def __init__(self):
        self.connection = None

    def get_connection(self):
        if self.connection is None:
            self.connection = sqlite3.connect('db/musique.db')
        return self.connection

    def disconnect(self):
        if self.connection is not None:
            self.connection.close()
            self.connection = None

    def get_artists(self):
        cursor = self.get_connection().cursor()
        cursor.execute("select nom from artiste")
        artists = cursor.fetchall()
        return [artist[0] for artist in artists]

    def get_albums(self):
        cursor = self.get_connection().cursor()
        cursor.execute("select titre from album")
        albums = cursor.fetchall()
        return [album[0] for album in albums]

    def insert_artist(self, name):
        connection = self.get_connection()
        cursor = connection.cursor()
        cursor.execute(("insert into artiste(nom, est_solo, nombre_individus) "
                        "values(?, ?, ?)"), (name, 0, 0))
        connection.commit()


================================================
File: Flask/db/index.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask
from flask import render_template
from flask import g
from flask import request
from flask import redirect
from .database import Database

app = Flask(__name__)


def get_db():
    db = getattr(g, '_database', None)
    if db is None:
        g._database = Database()
    return g._database


@app.teardown_appcontext
def close_connection(exception):
    db = getattr(g, '_database', None)
    if db is not None:
        db.disconnect()


@app.route('/')
def start_page():
    return render_template('accueil.html')


@app.route('/liste')
def show_list():
    artists = get_db().get_artists()
    return render_template('artistes.html', artist_names=artists)


@app.route('/deux-listes')
def show_two_lists():
    artists = get_db().get_artists()
    albums = get_db().get_albums()
    return render_template('2listes.html', artists=artists, albums=albums)


@app.route('/vide')
def show_two_empty_lists():
    artists = []
    albums = []
    return render_template('2listes-vides.html',
                           artists=artists, albums=albums)


@app.route('/formulaire')
def show_form():
    return render_template('form.html')


@app.route('/new', methods=['POST'])
def post_form():
    name = request.form['nom']
    if len(name) == 0:
        return render_template('form.html', erreur='Le nom est obligatoire')
    else:
        get_db().insert_artist(name)
        return redirect('/liste')


================================================
File: Flask/db/makefile
================================================
export FLASK_APP=index.py

run:
	flask run


================================================
File: Flask/db/db/musique.sql
================================================
create table artiste (
  id integer primary key,
  nom varchar(25),
  est_solo boolean,
  nombre_individus integer
);

create table maison_disque (
  id integer primary key,
  nom varchar(25)
);

create table album (
  id integer primary key,
  titre varchar(25),
  annee integer,
  artiste_id integer,
  maison_disque_id integer,
  foreign key (artiste_id) references artiste(id),
  foreign key (maison_disque_id) references maison_disque(id)
);

insert into artiste values (1, 'Michael Jackson', 1, 1);
insert into artiste values (2, 'Michael Buble', 1, 1);
insert into artiste values (3, 'Elvis Presley', 1, 1);
insert into artiste values (4, 'Iron Maiden', 0, 6);
insert into artiste values (5, 'Metallica', 0, 4);
insert into artiste values (6, 'The Sweet Database', 0, 9);
insert into artiste values (7, 'Computing Gods', 0, 3);

insert into maison_disque values (1, 'Century Media');
insert into maison_disque values (2, 'Nuclear Blast');
insert into maison_disque values (3, 'Magic Geni');

insert into album values (1, 'Thriller', 1982, 1, 1);
insert into album values (2, 'Xscape', 2014, 1, 1);
insert into album values (3, 'Bad', 1987, 1, 1);
insert into album values (4, 'Dangerous', 1991, 1, 1);
insert into album values (5, 'Invincible', 2001, 1, 2);
insert into album values (6, 'Immortal', 2011, 1, 1);
insert into album values (7, 'To Be Loved', 2013, 2, 1);
insert into album values (8, 'Christmas', 2011, 2, 1);
insert into album values (9, 'Crazy Love', 2009, 2, 1);
insert into album values (10, 'Today', 1975, 3, 1);
insert into album values (11, 'Promised Land', 1975, 3, 1);
insert into album values (12, 'Fear Of The Dark', 1992, 4, 2);
insert into album values (13, 'Killers', 1981, 4, 2);
insert into album values (14, 'Piece of Mind', 1983, 4, 2);
insert into album values (15, 'Powerslave', 1984, 4, 2);
insert into album values (16, 'Metallica', 1991, 5, 2);


================================================
File: Flask/db/templates/2listes-vides.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Liste</title>
</head>
<body>
  <h1>Artistes</h1>
  {% if not artists %}
    <p>Aucun artiste.</p>
  {% else %}
    <ul>
      {% for artist in artists %}
          <li>{{ artist }}</li>
      {% endfor %}
    </ul>
  {% endif %}
  <h2>Albums</h2>
  {% if not albums %}
    <p>Aucun album.</p>
  {% else %}
    <ul>
      {% for album in albums %}
          <li>{{ album }}</li>
      {% endfor %}
    </ul>
  {% endif %}
</body>
</html>


================================================
File: Flask/db/templates/2listes.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Liste</title>
</head>
<body>
  <h1>Artistes</h1>
  <ul>
    {% for artist in artists %}
        <li>{{ artist }}</li>
    {% endfor %}
  </ul>
  <h2>Albums</h2>
  <ul>
    {% for album in albums %}
        <li>{{ album }}</li>
    {% endfor %}
  </ul>
</body>
</html>


================================================
File: Flask/db/templates/accueil.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Liste</title>
</head>
<body>
  <h1>Bonsoir!</h1>
  <p><a href="/liste">Cliquez ici pour afficher la liste des artistes</a></p>
</body>
</html>


================================================
File: Flask/db/templates/artistes.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Liste</title>
</head>
<body>
  <h1>Artistes</h1>
  <ul>
    {% for artist in artist_names %}
        <li>{{ artist }}</li>
    {% endfor %}
  </ul>
</body>
</html>


================================================
File: Flask/db/templates/form.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Artiste</title>
</head>
<body>
  <h1>Nouvel artiste</h1>
  {% if erreur %}
    <p style="color:#700">{{ erreur }}</p>
  {% endif %}
  <form action="/new" method="post">
    <div>
      Nom : <input type="text" name="nom"><br>
      <input type="submit" name="bouton" value="Créer">
    </div>
  </form>
</body>
</html>


================================================
File: Flask/files/database.py
================================================
# Copyright 2018 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import sqlite3


class Database:
    def __init__(self):
        self.connection = None

    def get_connection(self):
        if self.connection is None:
            self.connection = sqlite3.connect('db/profiles.db')
        return self.connection

    def disconnect(self):
        if self.connection is not None:
            self.connection.close()

    def create_profile(self, firstname, lastname, pic_id):
        connection = self.get_connection()
        connection.execute(("insert into profiles(fname, lname, pic_id)"
                            " values(?, ?, ?)"), (firstname, lastname, pic_id))
        connection.commit()

    def create_picture(self, pic_id, file_data):
        connection = self.get_connection()
        connection.execute("insert into pictures(id, data) values(?, ?)", [pic_id, sqlite3.Binary(file_data.read())])
        connection.commit()

    def load_picture(self, pic_id):
        cursor = self.get_connection().cursor()
        cursor.execute(("select data from pictures where id=?"), (pic_id,))
        picture = cursor.fetchone()
        if picture is None:
            return None
        else:
            blob_data = picture[0]
            return blob_data
    
    def get_profiles(self):
        cursor = self.get_connection().cursor()
        cursor.execute("select fname, lname, pic_id from profiles")
        profiles = cursor.fetchall()
        return [{"prenom": profile[0], "nom": profile[1], "photo": profile[2]} for profile in profiles]


================================================
File: Flask/files/index.py
================================================
# Copyright 2018 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask
from flask import render_template
from flask import make_response
from flask import g
from flask import request
from flask import redirect
from flask import Response
from .database import Database
import uuid

app = Flask(__name__)


def get_db():
    db = getattr(g, '_database', None)
    if db is None:
        g._database = Database()
    return g._database


@app.teardown_appcontext
def close_connection(exception):
    db = getattr(g, '_database', None)
    if db is not None:
        db.disconnect()


@app.route('/')
def start_page():
    return render_template('formulaire.html')


@app.route('/confirmation')
def confirmation_page():
    db = get_db()
    profiles = db.get_profiles()
    return render_template('confirmation.html', profiles=profiles)


@app.route('/formulaire', methods=["POST"])
def formulaire_creation():
    lastname = request.form["nom"]
    firstname = request.form["prenom"]

    # TODO Valider le formulaire et gérer les erreurs

    photo = None
    picture_id = None
    if "photo" in request.files:
        photo = request.files["photo"]
        picture_id = str(uuid.uuid4().hex)

    db = get_db()
    db.create_profile(firstname, lastname, picture_id)
    if picture_id is not None:
        db.create_picture(picture_id, photo)

    return redirect("/confirmation")

@app.route('/image/<pic_id>.png')
def download_picture(pic_id):
    db = get_db()
    binary_data = db.load_picture(pic_id)
    if binary_data is None:
        return Response(status=404)
    else:
        response = make_response(binary_data)
        response.headers.set('Content-Type', 'image/png')
    return response


================================================
File: Flask/files/makefile
================================================
export FLASK_APP=index.py

run:
	flask run


================================================
File: Flask/files/db/profiles.sql
================================================
create table profiles (
  id integer primary key,
  fname varchar(40),
  lname varchar(40),
  pic_id varchar(32)
);

create table pictures (
  id varchar(32) primary key,
  data blob
);


================================================
File: Flask/files/templates/confirmation.html
================================================
{% extends "layout.html" %}
{% block content %}
  <h1>Votre compte a été créé.</h1>
  <p>Voici la liste des comptes :</p>
  <table>
    <thead>
      <tr>
        <th>Prénom</th>
        <th>Nom</th>
        <th>Photo</th>
      </tr>
    </thead>
    <tbody>
      {% for profile in profiles %}
        <tr>
          <td>{{ profile.prenom }}</td>
          <td>{{ profile.nom }}</td>
          <td><img src="/image/{{ profile.photo }}.png" height=50 width=50></td>
        </tr>
      {% endfor %}
    </tbody>
  </table>
  <p><a href="/">Retour à la page d'accueil</a></p>
{% endblock %}


================================================
File: Flask/files/templates/formulaire.html
================================================
{% extends "layout.html" %}
{% block content %}
  <h1>Création d'un utilisateur</h1>
  <form action="/formulaire" method="POST" enctype="multipart/form-data">
    <label for="champ_nom">Nom</label>&nbsp;<input type="text" id="champ_nom" name="nom" maxlength="40">
    <br>
    <label for="champ_prenom">Prénom</label>&nbsp;<input type="text" id="champ_prenom" name="prenom" maxlength="40">
    <br>
    <span>Choisir une photo</span><input type="file" name="photo" accept=".png">
    <br>
    <input type="submit" value="Soumettre">
  </form>
{% endblock %}


================================================
File: Flask/files/templates/layout.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Exemple d'upload de fichier</title>
<style>
table, th, td {
  border: 1px solid black;
}
</style>
</head>
<body>
  {% block content %}{% endblock %}
</body>
</html>


================================================
File: Flask/form/index.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask
from flask import render_template
from flask import redirect
from flask import request

app = Flask(__name__)


@app.route('/')
def formulaire():
    return render_template('formulaire.html')


@app.route('/envoyer', methods=['POST'])
def donnees_formulaire():
    print(request.form['name'])
    print(request.form['fname'])
    print(request.form['birthday'])
    print(request.form['birthmonth'])
    print(request.form['birthyear'])
    print(request.form['email'])
    print(request.form['username'])
    print(request.form['password'])
    print(request.form['salary'])
    print(request.form['publicity'])
    print(request.form['rating'])
    # Excellent endroit pour valider les données et les sauvegarder dans une
    # base de données.
    # Prévoir une route pour afficher les erreurs.
    return redirect('/merci')


@app.route('/merci')
def merci():
    return render_template('merci.html')


================================================
File: Flask/form/makefile
================================================
export FLASK_APP=index.py

run:
	flask run


================================================
File: Flask/form/templates/formulaire.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Questionnaire</title>
</head>
<body>
	<form action="/envoyer" method="post">
		<div>
			<table>
				<tr>
					<td><label for="nom">Nom :</label>
					</td>
					<td><input type="text" id="nom" name="name" size="40">
					</td>
				</tr>
				<tr>
					<td><label for="prenom">Prénom :</label>
					</td>
					<td><input type="text" id="prenom" name="fname" size="40">
					</td>
				</tr>
				<tr>
					<td><label for="jour">Date de naissance :</label>
					</td>
					<td><select id="jour" name="birthday">
							<option value="1">1</option>
							<option value="2">2</option>
							<option value="3">3</option>
							<option value="4">4</option>
							<option value="5">5</option>
							<option value="6">6</option>
							<option value="7">7</option>
							<option value="8">8</option>
							<option value="9">9</option>
							<option value="10">10</option>
							<option value="11">11</option>
							<option value="12">12</option>
							<option value="13">13</option>
							<option value="14">14</option>
							<option value="15">15</option>
							<option value="16">16</option>
							<option value="17">17</option>
							<option value="18">18</option>
							<option value="19">19</option>
							<option value="20">20</option>
							<option value="21">21</option>
							<option value="22">22</option>
							<option value="23">23</option>
							<option value="24">24</option>
							<option value="25">25</option>
							<option value="26">26</option>
							<option value="27">27</option>
							<option value="28">28</option>
							<option value="29">29</option>
							<option value="30">30</option>
							<option value="31">31</option>
					</select> <select name="birthmonth">
							<option value="1">Janvier</option>
							<option value="2">Février</option>
							<option value="3">Mars</option>
							<option value="4">Avril</option>
							<option value="5">Mai</option>
							<option value="6">Juin</option>
							<option value="7">Juillet</option>
							<option value="8">Août</option>
							<option value="9">Septembre</option>
							<option value="10">Octobre</option>
							<option value="11">Novembre</option>
							<option value="12">Décembre</option>
					</select> <input type="text" name="birthyear" size="4">
					</td>
				</tr>
				<tr>
					<td><label for="courriel">Courriel :</label>
					</td>
					<td><input type="text" id="courriel" name="email" size="60">
					</td>
				</tr>
				<tr>
					<td><label for="usager">Nom d'utilisateur :</label>
					</td>
					<td><input type="text" id="usager" name="username" size="30">
					</td>
				</tr>
				<tr>
					<td><label for="motdepasse">Mot de passe :</label>
					</td>
					<td><input type="password" id="motdepasse" name="password"
						size="30">
					</td>
				</tr>
			</table>
			<br>
			<span>Votre salaire annuel :</span><br> 
			<input type="radio" name="salary" value="1" checked="checked">
			<span>Moins	de 20 000$</span><br>
			<input type="radio" name="salary" value="2">
			<span>20 000$ à 29 999$</span><br>
			<input type="radio" name="salary" value="3">
			<span>30 000$ à 39 999$</span><br>
			<input type="radio" name="salary" value="4">
			<span>Plus de 40 000$</span><br>
			<br>
			<input type="checkbox" checked="checked" name="publicity" value="1">
			<span>Cochez cette case pour recevoir des offres promotionnelles</span>
			<br>
			<input type="hidden" name="rating" value="good">
			<input type="reset" value="Vider">
			<input type="submit" value="Envoyer">
		</div>
	</form>
</body>
</html>


================================================
File: Flask/form/templates/merci.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Merci</title>
</head>
<body>
  <h1>Merci d'avoir répondu à notre questionnaire!</h1>
</body>
</html>


================================================
File: Flask/hello_world/index.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask
app = Flask(__name__)


@app.route('/')
def hello_world():
    return """
       <html>
         <head>
           <title>Hello World!</title>
           <meta charset='utf-8'>
         </head>
         <body>
           <h1>Hello World!</h1>
         </body>
       </html>
       """


================================================
File: Flask/hello_world/makefile
================================================
export FLASK_APP=index.py

run:
	flask run


================================================
File: Flask/jberger/index.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask, render_template

app = Flask(__name__, static_url_path="", static_folder="static")


@app.route('/')
def page_accueil():
    return render_template('accueil.html')


@app.route('/inf3005/')
def page_prog_web_avancee():
    return render_template('inf3005.html')


================================================
File: Flask/jberger/makefile
================================================
export FLASK_APP=index.py

run:
	flask run


================================================
File: Flask/jberger/static/vendor/bootstrap/css/bootstrap-theme.css
================================================
/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
.btn-default,
.btn-primary,
.btn-success,
.btn-info,
.btn-warning,
.btn-danger {
  text-shadow: 0 -1px 0 rgba(0, 0, 0, .2);
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 1px rgba(0, 0, 0, .075);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 1px rgba(0, 0, 0, .075);
}
.btn-default:active,
.btn-primary:active,
.btn-success:active,
.btn-info:active,
.btn-warning:active,
.btn-danger:active,
.btn-default.active,
.btn-primary.active,
.btn-success.active,
.btn-info.active,
.btn-warning.active,
.btn-danger.active {
  -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
          box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
}
.btn-default.disabled,
.btn-primary.disabled,
.btn-success.disabled,
.btn-info.disabled,
.btn-warning.disabled,
.btn-danger.disabled,
.btn-default[disabled],
.btn-primary[disabled],
.btn-success[disabled],
.btn-info[disabled],
.btn-warning[disabled],
.btn-danger[disabled],
fieldset[disabled] .btn-default,
fieldset[disabled] .btn-primary,
fieldset[disabled] .btn-success,
fieldset[disabled] .btn-info,
fieldset[disabled] .btn-warning,
fieldset[disabled] .btn-danger {
  -webkit-box-shadow: none;
          box-shadow: none;
}
.btn-default .badge,
.btn-primary .badge,
.btn-success .badge,
.btn-info .badge,
.btn-warning .badge,
.btn-danger .badge {
  text-shadow: none;
}
.btn:active,
.btn.active {
  background-image: none;
}
.btn-default {
  text-shadow: 0 1px 0 #fff;
  background-image: -webkit-linear-gradient(top, #fff 0%, #e0e0e0 100%);
  background-image:      -o-linear-gradient(top, #fff 0%, #e0e0e0 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#e0e0e0));
  background-image:         linear-gradient(to bottom, #fff 0%, #e0e0e0 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#ffe0e0e0', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #dbdbdb;
  border-color: #ccc;
}
.btn-default:hover,
.btn-default:focus {
  background-color: #e0e0e0;
  background-position: 0 -15px;
}
.btn-default:active,
.btn-default.active {
  background-color: #e0e0e0;
  border-color: #dbdbdb;
}
.btn-default.disabled,
.btn-default[disabled],
fieldset[disabled] .btn-default,
.btn-default.disabled:hover,
.btn-default[disabled]:hover,
fieldset[disabled] .btn-default:hover,
.btn-default.disabled:focus,
.btn-default[disabled]:focus,
fieldset[disabled] .btn-default:focus,
.btn-default.disabled.focus,
.btn-default[disabled].focus,
fieldset[disabled] .btn-default.focus,
.btn-default.disabled:active,
.btn-default[disabled]:active,
fieldset[disabled] .btn-default:active,
.btn-default.disabled.active,
.btn-default[disabled].active,
fieldset[disabled] .btn-default.active {
  background-color: #e0e0e0;
  background-image: none;
}
.btn-primary {
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #265a88 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #265a88 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#265a88));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #265a88 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff265a88', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #245580;
}
.btn-primary:hover,
.btn-primary:focus {
  background-color: #265a88;
  background-position: 0 -15px;
}
.btn-primary:active,
.btn-primary.active {
  background-color: #265a88;
  border-color: #245580;
}
.btn-primary.disabled,
.btn-primary[disabled],
fieldset[disabled] .btn-primary,
.btn-primary.disabled:hover,
.btn-primary[disabled]:hover,
fieldset[disabled] .btn-primary:hover,
.btn-primary.disabled:focus,
.btn-primary[disabled]:focus,
fieldset[disabled] .btn-primary:focus,
.btn-primary.disabled.focus,
.btn-primary[disabled].focus,
fieldset[disabled] .btn-primary.focus,
.btn-primary.disabled:active,
.btn-primary[disabled]:active,
fieldset[disabled] .btn-primary:active,
.btn-primary.disabled.active,
.btn-primary[disabled].active,
fieldset[disabled] .btn-primary.active {
  background-color: #265a88;
  background-image: none;
}
.btn-success {
  background-image: -webkit-linear-gradient(top, #5cb85c 0%, #419641 100%);
  background-image:      -o-linear-gradient(top, #5cb85c 0%, #419641 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5cb85c), to(#419641));
  background-image:         linear-gradient(to bottom, #5cb85c 0%, #419641 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5cb85c', endColorstr='#ff419641', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #3e8f3e;
}
.btn-success:hover,
.btn-success:focus {
  background-color: #419641;
  background-position: 0 -15px;
}
.btn-success:active,
.btn-success.active {
  background-color: #419641;
  border-color: #3e8f3e;
}
.btn-success.disabled,
.btn-success[disabled],
fieldset[disabled] .btn-success,
.btn-success.disabled:hover,
.btn-success[disabled]:hover,
fieldset[disabled] .btn-success:hover,
.btn-success.disabled:focus,
.btn-success[disabled]:focus,
fieldset[disabled] .btn-success:focus,
.btn-success.disabled.focus,
.btn-success[disabled].focus,
fieldset[disabled] .btn-success.focus,
.btn-success.disabled:active,
.btn-success[disabled]:active,
fieldset[disabled] .btn-success:active,
.btn-success.disabled.active,
.btn-success[disabled].active,
fieldset[disabled] .btn-success.active {
  background-color: #419641;
  background-image: none;
}
.btn-info {
  background-image: -webkit-linear-gradient(top, #5bc0de 0%, #2aabd2 100%);
  background-image:      -o-linear-gradient(top, #5bc0de 0%, #2aabd2 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5bc0de), to(#2aabd2));
  background-image:         linear-gradient(to bottom, #5bc0de 0%, #2aabd2 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff2aabd2', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #28a4c9;
}
.btn-info:hover,
.btn-info:focus {
  background-color: #2aabd2;
  background-position: 0 -15px;
}
.btn-info:active,
.btn-info.active {
  background-color: #2aabd2;
  border-color: #28a4c9;
}
.btn-info.disabled,
.btn-info[disabled],
fieldset[disabled] .btn-info,
.btn-info.disabled:hover,
.btn-info[disabled]:hover,
fieldset[disabled] .btn-info:hover,
.btn-info.disabled:focus,
.btn-info[disabled]:focus,
fieldset[disabled] .btn-info:focus,
.btn-info.disabled.focus,
.btn-info[disabled].focus,
fieldset[disabled] .btn-info.focus,
.btn-info.disabled:active,
.btn-info[disabled]:active,
fieldset[disabled] .btn-info:active,
.btn-info.disabled.active,
.btn-info[disabled].active,
fieldset[disabled] .btn-info.active {
  background-color: #2aabd2;
  background-image: none;
}
.btn-warning {
  background-image: -webkit-linear-gradient(top, #f0ad4e 0%, #eb9316 100%);
  background-image:      -o-linear-gradient(top, #f0ad4e 0%, #eb9316 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f0ad4e), to(#eb9316));
  background-image:         linear-gradient(to bottom, #f0ad4e 0%, #eb9316 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff0ad4e', endColorstr='#ffeb9316', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #e38d13;
}
.btn-warning:hover,
.btn-warning:focus {
  background-color: #eb9316;
  background-position: 0 -15px;
}
.btn-warning:active,
.btn-warning.active {
  background-color: #eb9316;
  border-color: #e38d13;
}
.btn-warning.disabled,
.btn-warning[disabled],
fieldset[disabled] .btn-warning,
.btn-warning.disabled:hover,
.btn-warning[disabled]:hover,
fieldset[disabled] .btn-warning:hover,
.btn-warning.disabled:focus,
.btn-warning[disabled]:focus,
fieldset[disabled] .btn-warning:focus,
.btn-warning.disabled.focus,
.btn-warning[disabled].focus,
fieldset[disabled] .btn-warning.focus,
.btn-warning.disabled:active,
.btn-warning[disabled]:active,
fieldset[disabled] .btn-warning:active,
.btn-warning.disabled.active,
.btn-warning[disabled].active,
fieldset[disabled] .btn-warning.active {
  background-color: #eb9316;
  background-image: none;
}
.btn-danger {
  background-image: -webkit-linear-gradient(top, #d9534f 0%, #c12e2a 100%);
  background-image:      -o-linear-gradient(top, #d9534f 0%, #c12e2a 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9534f), to(#c12e2a));
  background-image:         linear-gradient(to bottom, #d9534f 0%, #c12e2a 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9534f', endColorstr='#ffc12e2a', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #b92c28;
}
.btn-danger:hover,
.btn-danger:focus {
  background-color: #c12e2a;
  background-position: 0 -15px;
}
.btn-danger:active,
.btn-danger.active {
  background-color: #c12e2a;
  border-color: #b92c28;
}
.btn-danger.disabled,
.btn-danger[disabled],
fieldset[disabled] .btn-danger,
.btn-danger.disabled:hover,
.btn-danger[disabled]:hover,
fieldset[disabled] .btn-danger:hover,
.btn-danger.disabled:focus,
.btn-danger[disabled]:focus,
fieldset[disabled] .btn-danger:focus,
.btn-danger.disabled.focus,
.btn-danger[disabled].focus,
fieldset[disabled] .btn-danger.focus,
.btn-danger.disabled:active,
.btn-danger[disabled]:active,
fieldset[disabled] .btn-danger:active,
.btn-danger.disabled.active,
.btn-danger[disabled].active,
fieldset[disabled] .btn-danger.active {
  background-color: #c12e2a;
  background-image: none;
}
.thumbnail,
.img-thumbnail {
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
          box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
}
.dropdown-menu > li > a:hover,
.dropdown-menu > li > a:focus {
  background-color: #e8e8e8;
  background-image: -webkit-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image:      -o-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f5f5f5), to(#e8e8e8));
  background-image:         linear-gradient(to bottom, #f5f5f5 0%, #e8e8e8 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5', endColorstr='#ffe8e8e8', GradientType=0);
  background-repeat: repeat-x;
}
.dropdown-menu > .active > a,
.dropdown-menu > .active > a:hover,
.dropdown-menu > .active > a:focus {
  background-color: #2e6da4;
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2e6da4));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #2e6da4 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2e6da4', GradientType=0);
  background-repeat: repeat-x;
}
.navbar-default {
  background-image: -webkit-linear-gradient(top, #fff 0%, #f8f8f8 100%);
  background-image:      -o-linear-gradient(top, #fff 0%, #f8f8f8 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#f8f8f8));
  background-image:         linear-gradient(to bottom, #fff 0%, #f8f8f8 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#fff8f8f8', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 5px rgba(0, 0, 0, .075);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 5px rgba(0, 0, 0, .075);
}
.navbar-default .navbar-nav > .open > a,
.navbar-default .navbar-nav > .active > a {
  background-image: -webkit-linear-gradient(top, #dbdbdb 0%, #e2e2e2 100%);
  background-image:      -o-linear-gradient(top, #dbdbdb 0%, #e2e2e2 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dbdbdb), to(#e2e2e2));
  background-image:         linear-gradient(to bottom, #dbdbdb 0%, #e2e2e2 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdbdbdb', endColorstr='#ffe2e2e2', GradientType=0);
  background-repeat: repeat-x;
  -webkit-box-shadow: inset 0 3px 9px rgba(0, 0, 0, .075);
          box-shadow: inset 0 3px 9px rgba(0, 0, 0, .075);
}
.navbar-brand,
.navbar-nav > li > a {
  text-shadow: 0 1px 0 rgba(255, 255, 255, .25);
}
.navbar-inverse {
  background-image: -webkit-linear-gradient(top, #3c3c3c 0%, #222 100%);
  background-image:      -o-linear-gradient(top, #3c3c3c 0%, #222 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#3c3c3c), to(#222));
  background-image:         linear-gradient(to bottom, #3c3c3c 0%, #222 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff3c3c3c', endColorstr='#ff222222', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-radius: 4px;
}
.navbar-inverse .navbar-nav > .open > a,
.navbar-inverse .navbar-nav > .active > a {
  background-image: -webkit-linear-gradient(top, #080808 0%, #0f0f0f 100%);
  background-image:      -o-linear-gradient(top, #080808 0%, #0f0f0f 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#080808), to(#0f0f0f));
  background-image:         linear-gradient(to bottom, #080808 0%, #0f0f0f 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff080808', endColorstr='#ff0f0f0f', GradientType=0);
  background-repeat: repeat-x;
  -webkit-box-shadow: inset 0 3px 9px rgba(0, 0, 0, .25);
          box-shadow: inset 0 3px 9px rgba(0, 0, 0, .25);
}
.navbar-inverse .navbar-brand,
.navbar-inverse .navbar-nav > li > a {
  text-shadow: 0 -1px 0 rgba(0, 0, 0, .25);
}
.navbar-static-top,
.navbar-fixed-top,
.navbar-fixed-bottom {
  border-radius: 0;
}
@media (max-width: 767px) {
  .navbar .navbar-nav .open .dropdown-menu > .active > a,
  .navbar .navbar-nav .open .dropdown-menu > .active > a:hover,
  .navbar .navbar-nav .open .dropdown-menu > .active > a:focus {
    color: #fff;
    background-image: -webkit-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
    background-image:      -o-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
    background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2e6da4));
    background-image:         linear-gradient(to bottom, #337ab7 0%, #2e6da4 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2e6da4', GradientType=0);
    background-repeat: repeat-x;
  }
}
.alert {
  text-shadow: 0 1px 0 rgba(255, 255, 255, .2);
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .25), 0 1px 2px rgba(0, 0, 0, .05);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .25), 0 1px 2px rgba(0, 0, 0, .05);
}
.alert-success {
  background-image: -webkit-linear-gradient(top, #dff0d8 0%, #c8e5bc 100%);
  background-image:      -o-linear-gradient(top, #dff0d8 0%, #c8e5bc 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dff0d8), to(#c8e5bc));
  background-image:         linear-gradient(to bottom, #dff0d8 0%, #c8e5bc 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdff0d8', endColorstr='#ffc8e5bc', GradientType=0);
  background-repeat: repeat-x;
  border-color: #b2dba1;
}
.alert-info {
  background-image: -webkit-linear-gradient(top, #d9edf7 0%, #b9def0 100%);
  background-image:      -o-linear-gradient(top, #d9edf7 0%, #b9def0 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9edf7), to(#b9def0));
  background-image:         linear-gradient(to bottom, #d9edf7 0%, #b9def0 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9edf7', endColorstr='#ffb9def0', GradientType=0);
  background-repeat: repeat-x;
  border-color: #9acfea;
}
.alert-warning {
  background-image: -webkit-linear-gradient(top, #fcf8e3 0%, #f8efc0 100%);
  background-image:      -o-linear-gradient(top, #fcf8e3 0%, #f8efc0 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fcf8e3), to(#f8efc0));
  background-image:         linear-gradient(to bottom, #fcf8e3 0%, #f8efc0 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffcf8e3', endColorstr='#fff8efc0', GradientType=0);
  background-repeat: repeat-x;
  border-color: #f5e79e;
}
.alert-danger {
  background-image: -webkit-linear-gradient(top, #f2dede 0%, #e7c3c3 100%);
  background-image:      -o-linear-gradient(top, #f2dede 0%, #e7c3c3 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f2dede), to(#e7c3c3));
  background-image:         linear-gradient(to bottom, #f2dede 0%, #e7c3c3 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2dede', endColorstr='#ffe7c3c3', GradientType=0);
  background-repeat: repeat-x;
  border-color: #dca7a7;
}
.progress {
  background-image: -webkit-linear-gradient(top, #ebebeb 0%, #f5f5f5 100%);
  background-image:      -o-linear-gradient(top, #ebebeb 0%, #f5f5f5 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#ebebeb), to(#f5f5f5));
  background-image:         linear-gradient(to bottom, #ebebeb 0%, #f5f5f5 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffebebeb', endColorstr='#fff5f5f5', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar {
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #286090 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #286090 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#286090));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #286090 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff286090', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-success {
  background-image: -webkit-linear-gradient(top, #5cb85c 0%, #449d44 100%);
  background-image:      -o-linear-gradient(top, #5cb85c 0%, #449d44 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5cb85c), to(#449d44));
  background-image:         linear-gradient(to bottom, #5cb85c 0%, #449d44 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5cb85c', endColorstr='#ff449d44', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-info {
  background-image: -webkit-linear-gradient(top, #5bc0de 0%, #31b0d5 100%);
  background-image:      -o-linear-gradient(top, #5bc0de 0%, #31b0d5 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5bc0de), to(#31b0d5));
  background-image:         linear-gradient(to bottom, #5bc0de 0%, #31b0d5 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff31b0d5', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-warning {
  background-image: -webkit-linear-gradient(top, #f0ad4e 0%, #ec971f 100%);
  background-image:      -o-linear-gradient(top, #f0ad4e 0%, #ec971f 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f0ad4e), to(#ec971f));
  background-image:         linear-gradient(to bottom, #f0ad4e 0%, #ec971f 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff0ad4e', endColorstr='#ffec971f', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-danger {
  background-image: -webkit-linear-gradient(top, #d9534f 0%, #c9302c 100%);
  background-image:      -o-linear-gradient(top, #d9534f 0%, #c9302c 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9534f), to(#c9302c));
  background-image:         linear-gradient(to bottom, #d9534f 0%, #c9302c 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9534f', endColorstr='#ffc9302c', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-striped {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:      -o-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:         linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
}
.list-group {
  border-radius: 4px;
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
          box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
}
.list-group-item.active,
.list-group-item.active:hover,
.list-group-item.active:focus {
  text-shadow: 0 -1px 0 #286090;
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #2b669a 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #2b669a 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2b669a));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #2b669a 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2b669a', GradientType=0);
  background-repeat: repeat-x;
  border-color: #2b669a;
}
.list-group-item.active .badge,
.list-group-item.active:hover .badge,
.list-group-item.active:focus .badge {
  text-shadow: none;
}
.panel {
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, .05);
          box-shadow: 0 1px 2px rgba(0, 0, 0, .05);
}
.panel-default > .panel-heading {
  background-image: -webkit-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image:      -o-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f5f5f5), to(#e8e8e8));
  background-image:         linear-gradient(to bottom, #f5f5f5 0%, #e8e8e8 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5', endColorstr='#ffe8e8e8', GradientType=0);
  background-repeat: repeat-x;
}
.panel-primary > .panel-heading {
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2e6da4));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #2e6da4 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2e6da4', GradientType=0);
  background-repeat: repeat-x;
}
.panel-success > .panel-heading {
  background-image: -webkit-linear-gradient(top, #dff0d8 0%, #d0e9c6 100%);
  background-image:      -o-linear-gradient(top, #dff0d8 0%, #d0e9c6 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dff0d8), to(#d0e9c6));
  background-image:         linear-gradient(to bottom, #dff0d8 0%, #d0e9c6 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdff0d8', endColorstr='#ffd0e9c6', GradientType=0);
  background-repeat: repeat-x;
}
.panel-info > .panel-heading {
  background-image: -webkit-linear-gradient(top, #d9edf7 0%, #c4e3f3 100%);
  background-image:      -o-linear-gradient(top, #d9edf7 0%, #c4e3f3 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9edf7), to(#c4e3f3));
  background-image:         linear-gradient(to bottom, #d9edf7 0%, #c4e3f3 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9edf7', endColorstr='#ffc4e3f3', GradientType=0);
  background-repeat: repeat-x;
}
.panel-warning > .panel-heading {
  background-image: -webkit-linear-gradient(top, #fcf8e3 0%, #faf2cc 100%);
  background-image:      -o-linear-gradient(top, #fcf8e3 0%, #faf2cc 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fcf8e3), to(#faf2cc));
  background-image:         linear-gradient(to bottom, #fcf8e3 0%, #faf2cc 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffcf8e3', endColorstr='#fffaf2cc', GradientType=0);
  background-repeat: repeat-x;
}
.panel-danger > .panel-heading {
  background-image: -webkit-linear-gradient(top, #f2dede 0%, #ebcccc 100%);
  background-image:      -o-linear-gradient(top, #f2dede 0%, #ebcccc 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f2dede), to(#ebcccc));
  background-image:         linear-gradient(to bottom, #f2dede 0%, #ebcccc 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2dede', endColorstr='#ffebcccc', GradientType=0);
  background-repeat: repeat-x;
}
.well {
  background-image: -webkit-linear-gradient(top, #e8e8e8 0%, #f5f5f5 100%);
  background-image:      -o-linear-gradient(top, #e8e8e8 0%, #f5f5f5 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#e8e8e8), to(#f5f5f5));
  background-image:         linear-gradient(to bottom, #e8e8e8 0%, #f5f5f5 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffe8e8e8', endColorstr='#fff5f5f5', GradientType=0);
  background-repeat: repeat-x;
  border-color: #dcdcdc;
  -webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, .05), 0 1px 0 rgba(255, 255, 255, .1);
          box-shadow: inset 0 1px 3px rgba(0, 0, 0, .05), 0 1px 0 rgba(255, 255, 255, .1);
}
/*# sourceMappingURL=bootstrap-theme.css.map */


================================================
File: Flask/jberger/static/vendor/bootstrap/js/npm.js
================================================
// This file is autogenerated via the `commonjs` Grunt task. You can require() this file in a CommonJS environment.
require('../../js/transition.js')
require('../../js/alert.js')
require('../../js/button.js')
require('../../js/carousel.js')
require('../../js/collapse.js')
require('../../js/dropdown.js')
require('../../js/modal.js')
require('../../js/tooltip.js')
require('../../js/popover.js')
require('../../js/scrollspy.js')
require('../../js/tab.js')
require('../../js/affix.js')

================================================
File: Flask/jberger/templates/accueil.html
================================================
<!DOCTYPE html>
<html lang="fr">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Jacques Berger - enseignant, développeur et musicien</title>
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
  </head>
  <body>
    <nav class="navbar navbar-default">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-menu" aria-expanded="false">
        <span class="sr-only">Navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="/">jberger.org</a>
    </div>

    <div class="collapse navbar-collapse" id="navbar-menu">
      <ul class="nav navbar-nav">
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Cours <span class="caret"></span></a>
          <ul class="dropdown-menu">
            <li><a href="/inf1256/">INF1256 - Informatique pour les sciences de la gestion</a></li>
            <li><a href="/inf2015/">INF2015 - Développement de logiciels dans un environnement Agile</a></li>
            <li><a href="/inf2005/">INF2005 - Programmation web</a></li>
            <li><a href="/inf3005/">INF3005 - Programmation web avancée</a></li>
            <li><a href="/inf3135/">INF3135 - Construction et maintenance de logiciels</a></li>
            <li><a href="/inf3172/">INF3172 - Principes des systèmes d'exploitation</a></li>
            <li><a href="/inf3180/">INF3180 - Fichiers et bases de données</a></li>
            <li><a href="/inf4150/">INF4150 - Interfaces personnes-machines</a></li>
            <li><a href="/inf4170/">INF4170 - Architecture des ordinateurs</a></li>
            <li><a href="/inf4375/">INF4375 - Paradigmes des échances Internet</a></li>
            <li><a href="/inf5153/">INF5153 - Génie logiciel : conception</a></li>
            <li><a href="/inm5151/">INM5151 - Projet d'analyse et de modélisation</a></li>
            <li><a href="/mgl7460/">MGL7460 - Réalisation et maintenance des logiciels</a></li>
          </ul>
        </li>
      </ul>
      <ul class="nav navbar-nav navbar-right">
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://twitter.com/jacquesberger">
              <img alt="Twitter Logo" src="/img/Twitter_Logo_White_On_Blue.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://www.facebook.com/jacquesbergerTI/">
              <img alt="Facebook Logo" src="/img/FB-f-Logo__blue_512.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://ca.linkedin.com/in/jacquesberger">
              <img alt="LinkedIn Logo" src="/img/In-2C-128px-TM.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://www.instagram.com/jacquesberger/">
              <img alt="Instagram Logo" src="/img/glyph-logo_May2016.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://github.com/jacquesberger">
              <img alt="Github Logo" src="/img/GitHub-Mark-120px-plus.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
      </ul>
    </div>
  </div>
</nav>
    <div class="container-fluid">
      <div class="row">
        <div class="col-xs-12 text-center page-header">
          <h1>Jacques Berger</h1>
          <p>Mes pensées sur le développement de logiciels et l'enseignement de l'informatique.</p>
        </div>
      </div>
      <div class="row">
        <div class="col-sm-7 col-sm-offset-1">
          <div class="post"><p class="h3">L'enseignement ou le développement?</p><p class="text-muted small">Article publié le 24 avril 2015</p><p>J'ai commencé ma carrière de développeur bien avant ma carrière d'enseignant.
            Le démarrage d'une carrière d'enseignant prend un certain temps, il
            faut être très patient. Au début, je n'enseignais qu'un seul cours
            par session, et pas à toutes les sessions. À cette époque,
            je travaillais comme développeur à temps complet et j'enseignais le
            soir (ou sur l'heure du midi).</p><p>Ça m'a pris environ 3 ans pour finalement avoir la chance d'enseigner
            beaucoup plus, c'est-à-dire de 2 à 3 cours stables par session.
            Le terme stable est discutable étant donné que je suis contractuel.</p><p>À partir de ce moment, j'ai commencé à m'interroger à savoir si je
            préfère l'enseignement au développement de logiciels et si je devrais
            quitter le développement pour ne faire que de l'enseignement. Plus
            tard, j'ai aussi eu la réflexion inverse, c'est-à-dire de quitter
            l'enseignement pour me consacrer à ma première passion, le développement
            de logiciels.</p><p>J'ai essayé les deux! Avant d'enseigner, je ne faisais que du
            développement. Il y a 4 ans, un événement a fait en sorte que j'ai
            voulu libérer mon horaire le plus possible et j'ai quitté temporairement
            le développement pour ne faire que de l'enseignement pendant une année
            complète. J'ai aimé les deux expériences, donc ça ne m'a pas beaucoup
            aidé à faire un choix.</p><p>À force de réfléchir et d'expérimenter, j'en suis venu à la conclusion
            que j'avais besoin des deux en même temps! Je n'ai pas envie de choisir
            et d'en sacrifier un! Je crois sincèrement que l'enseignement fait de
            moi un meilleur développeur, car ça m'oblige à rester éveillé aux
            nouveautés du marché. Je crois également que le développement fait de
            moi un meilleur enseignant, car ça m'alimente en anecdotes et ça me
            donne l'occasion de réfléchir sur les applications des notions que
            j'enseigne. Bref, les deux se complètent à merveille!</p><p>Il est impensable de faire les deux à temps plein, pour plusieurs
            raisons... Premièrement, l'épuisement professionnel n'est jamais
            quelque chose de bien. Deuxièmement, je n'ai pas l'intention d'être un
            fantôme dans ma famille, je dois donc libérer du temps familial. Le
            plus possible.</p><p>La meilleure solution que j'ai trouvé jusqu'à date, c'est d'enseigner
            à temps plein, soit environ 8 cours par année, et de faire du
            développement de logiciels à temps partiel, soit 3 jours par semaine.
            Je dois dire par contre que j'aimerais avoir plus de temps pour développer,
            mais je ne peux pas tout faire... C'est un problème sans solution.
            Ça me convient pour l'instant.</p></div><hr><div class="post"><p class="h3">Comment je me prépare à une entrevue...</p><p class="text-muted small">Article publié le 22 janvier 2013</p><p>Plusieurs personnes croient qu'il n'est pas nécessaire de se
	              préparer avant une entrevue d'emploi, que l'employeur doit vous
	              voir au naturel, car c'est ainsi qu'il vous verra travailler.
	              Ce n'est pas faux! Mais si on considère que les entreprises
	              veulent des employés méthodiques, rigoureux et travaillants,
	              un minimum de préparation est de mise.</p><p>Je ne crois pas détenir la vérité absolue, ni même la meilleure
	              façon de se préparer pour une entrevue. Je vais simplement
	              décrire comment je me prépare pour une telle rencontre dans
	              le but d'aider ceux qui ne savent pas comment s'y prendre.
	              Ça fonctionne bien pour moi, peut-être que ça ne fonctionnera
	              pas pour vous. Aucune garantie.</p><p>Vous avez déjà un premier pas de fait. Vous avez envoyé votre
	              CV et il était suffisamment intéressant pour vous permettre
	              de décrocher une entrevue. Célébration! OK, mais pas trop
	              longtemps, on a du travail! Je prends quand même une petite
	              Heineken pour célébrer cette petite victoire.</p><p>La première étape est d'apprendre à connaître l'entreprise. Ah oui!
	              Des fois, on envoie nos CV un peu n'importe où, sans trop
	              regarder, alors il est possible qu'une de ces entreprises vous
	              contacte, même si vous ne la connaissez pas du tout. Bref,
	              que vous la connaissiez ou non, prenez le temps d'aller sur le
	              site web de la compagnie et d'y lire à peu près tout ce que vous
	              y trouverez. Ensuite, vous aurez le plaisir de dire à l'entrevue
	              «Ah oui, j'ai lu ça sur votre site web!»</p><p>Dans certains cas, c'est la seule chose que vous pourrez faire,
	              lire le contenu du site web. Sinon, vous pouvez faire quelques
	              recherches supplémentaires pour trouver des articles qui parlent
	              de cette entreprise. Si l'organisation vient tout juste de gagner
	              un prix quelconque, en glisser un mot à l'entrevue montrera que
	              vous êtes bien renseigné.</p><p>Si vous avez la chance de connaître quelqu'un qui travaille
	              pour cette entreprise, c'est merveilleux! Faites aller votre
	              réseau de contacts. Contactez cette personne et posez-lui des
	              questions sur l'ambiance de travail, sur ses collègues et sur
	              les outils utilisés dans l'entreprise (langages de programmation,
	              frameworks, etc.). Une vision de l'intérieur, c'est toujours
	              bon.</p><p>Si votre contact vous parle d'outils que vous ne connaissez pas,
	              c'est le moment idéal de vous documenter. Lisez rapidement sur
	              ces outils. Si vous avez le temps, essayez-les! Téléchargez des
	              versions gratuites ou d'évaluation et faites une petite
	              preuve de concept avec ces outils. C'est le meilleur moyen d'en
	              saisir l'essence rapidement. Ensuite, durant l'entrevue, si on
	              vous demande si vous connaissez un outil, vous
	              pourrez dire que vous ne connaissez pas l'outil en profondeur 
	              mais que vous l'avez essayé il y a quelques jours en vous 
	              préparant à l'entrevue. Décrivez la preuve de concept que vous
	              avez faite. Ils seront surpris que vous ayez pris le temps de
	              faire cette recherche.</p><p>C'est beaucoup de travail tout ça? Oui, évidemment. Je crois
	              fermement que les efforts finissent toujours par payer. Si c'est
	              trop de travail pour vous, ou que vous n'avez pas cette discipline,
	              ne le faites pas. Vous finirez quand même par trouver du
	              travail. Par contre, si vous voulez vraiment décrocher cet
	              emploi, n'ayez pas peur de mettre des efforts. Et n'ayez pas
	              peur d'échouer. C'est en échouant qu'on apprend le plus.</p></div><hr><div class="post"><p class="h3">25 candidats pour un poste d'HTML</p><p class="text-muted small">Article publié le 14 octobre 2012</p><p>Une petite anecdote que j'ai vécue lorsque j'ai terminé mon
			      cégep et qui me fait toujours rire, même aujourd'hui.</p><p>En 2003, le marché du développement de logiciels n'était pas
			      aussi intéressant qu'aujourd'hui à Montréal. À l'époque, il
			      y avait plus d'offre que de demande et les emplois étaient plus
			      rares. Du moins, les bons emplois étaient plus rares.</p><p>Fraîchement sorti du cégep avec mon DEC en informatique de
			      gestion en poche, je me suis lancé dans la recherche d'un
			      emploi à Montréal. Durant les premiers mois de ma recherche
			      d'emploi, j'ai passé plusieurs entrevues dans diverses entreprises.
			      L'une de ces entrevues m'a frappé plus que les autres.</p><p>Il s'agissait d'un poste bien peu intéressant, pour une
			      entreprise qui développait un logiciel comptable. La tâche
			      principal de ce poste était de prendre un formulaire papier du
			      gouvernement et d'écrire un document HTML qui reproduit le plus
			      fidèlement possible le formulaire papier original. En gros, du
			      HTML et du CSS assez élémentaire. L'entreprise offrait 
			      25,000$ par année pour ce poste et exigeait
			      à l'employé d'être présent au bureau au moins 38 heures par
			      semaine.</p><p>Le plus étonnant dans tout ça, ce n'est pas le faible salaire
			      ou les tâches peu intéressantes, c'est définitivement la
			      méthode de recrutement de l'entreprise. Mon entrevue a durée
			      près de deux heures. J'ai eu droit à une entrevue complète
			      en français et en anglais, à un test technique sur le HTML et
			      finalement à un test de personnalité. Finalement, le recruteur
			      m'a confié qu'il devait rencontrer 25 candidats au total pour
			      ce poste.</p><p>Évidemment, je n'ai pas eu l'emploi. Par contre, encore
			      aujourd'hui, je suis étonné par cette expérience. Une entrevue
			      de 2 heures, bilingue, avec test technique et test de 
			      personnalité, multipliée par 25 candidats, pour un poste d'HTML
			      élémentaire! Les coûts de recrutement de cette entreprise
			      doivent être incroyables.</p></div>        </div>
        <div class="col-sm-3">
          <a class="twitter-timeline" href="https://twitter.com/jacquesberger" data-widget-id="346830975084421121">Tweets de @jacquesberger</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
        </div>
      </div>
      <div class="row" style="margin-top:3em">
        <div class="col-xs-12 text-center">
          <p>&copy; Jacques Berger <strong>2016</strong></p>
        </div>
      </div>
    </div>

    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.min.js"></script>
  </body>
</html>


================================================
File: Flask/jberger/templates/inf3005.html
================================================
<!DOCTYPE html>
<html lang="fr">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>INF3005 - Programmation web avancée</title>
    <link href="/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
  </head>
  <body>

    <nav class="navbar navbar-default">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-menu" aria-expanded="false">
        <span class="sr-only">Navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="/">jberger.org</a>
    </div>

    <div class="collapse navbar-collapse" id="navbar-menu">
      <ul class="nav navbar-nav">
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Cours <span class="caret"></span></a>
          <ul class="dropdown-menu">
            <li><a href="/inf1256/">INF1256 - Informatique pour les sciences de la gestion</a></li>
            <li><a href="/inf2015/">INF2015 - Développement de logiciels dans un environnement Agile</a></li>
            <li><a href="/inf2005/">INF2005 - Programmation web</a></li>
            <li><a href="/inf3005/">INF3005 - Programmation web avancée</a></li>
            <li><a href="/inf3135/">INF3135 - Construction et maintenance de logiciels</a></li>
            <li><a href="/inf3172/">INF3172 - Principes des systèmes d'exploitation</a></li>
            <li><a href="/inf3180/">INF3180 - Fichiers et bases de données</a></li>
            <li><a href="/inf4150/">INF4150 - Interfaces personnes-machines</a></li>
            <li><a href="/inf4170/">INF4170 - Architecture des ordinateurs</a></li>
            <li><a href="/inf4375/">INF4375 - Paradigmes des échances Internet</a></li>
            <li><a href="/inf5153/">INF5153 - Génie logiciel : conception</a></li>
            <li><a href="/inm5151/">INM5151 - Projet d'analyse et de modélisation</a></li>
            <li><a href="/mgl7460/">MGL7460 - Réalisation et maintenance des logiciels</a></li>
          </ul>
        </li>
      </ul>
      <ul class="nav navbar-nav navbar-right">
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://twitter.com/jacquesberger">
              <img alt="Twitter Logo" src="/img/Twitter_Logo_White_On_Blue.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://www.facebook.com/jacquesbergerTI/">
              <img alt="Facebook Logo" src="/img/FB-f-Logo__blue_512.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://ca.linkedin.com/in/jacquesberger">
              <img alt="LinkedIn Logo" src="/img/In-2C-128px-TM.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://www.instagram.com/jacquesberger/">
              <img alt="Instagram Logo" src="/img/glyph-logo_May2016.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://github.com/jacquesberger">
              <img alt="Github Logo" src="/img/GitHub-Mark-120px-plus.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
      </ul>
    </div>
  </div>
</nav>
    <div class="container-fluid">
      <div class="row">
        <div class="col-xs-12 text-center page-header">
          <h1>Programmation web avancée</h1>
          <p>INF3005-50 Hiver 2017</p>
          <p>Moniteur : Philippe Pépos-Petitclerc</p>
          <p><a href="material/PlanDeCours.pdf">Plan de cours</a></p>
        </div>
      </div>

      <div class="row">
        <div class="col-sm-8 col-sm-offset-2">
          <p class="h3 text-center">Calendrier</p>
          <table class="table">
            <thead>
              <tr>
                <th>Semaine</th>
                <th>Dates</th>
                <th>Contenu</th>
                <th>Laboratoire</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>1</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 13 janvier 2017</li>
                    <li class="text-muted small">Atelier : 9 janvier 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li><a href="/notes/files/INF3005-Introduction.pdf">Introduction</a></li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Aucun</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>2</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 20 janvier 2017</li>
                    <li class="text-muted small">Atelier : 16 janvier 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li><a href="/notes/files/INF3005-Python.pdf">Python</a></li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Aucun</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>3</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 27 janvier 2017</li>
                    <li class="text-muted small">Atelier : 23 janvier 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li><a href="/notes/files/INF3005-Python-partie2.pdf">Python - partie 2</a></li>
                    <li><a href="/notes/files/INF3005-BD.pdf">Utilisation d'une base de données</a></li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li><a href="https://github.com/jacquesberger/exemplesINF3005/blob/master/Ateliers/Python/enonce.md">Introduction à Python</a></li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>4</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 3 février 2017</li>
                    <li class="text-muted small">Atelier : 30 janvier 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>PEP8</li>
                    <li>Flask</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li><a href="https://github.com/jacquesberger/exemplesINF3005/blob/master/Ateliers/BD/enonce.md">SQLite avec Python</a></li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>5</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 10 février 2017</li>
                    <li class="text-muted small">Atelier : 6 février 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                    <li>Énoncé TP1</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>6</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 17 février 2017</li>
                    <li class="text-muted small">Atelier : 13 février 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                    <li>Préparation à l'examen</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>7</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 24 février 2017</li>
                    <li class="text-muted small">Atelier : 20 février 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Examen intra</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Aucun</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>8</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 3 mars 2017</li>
                    <li class="text-muted small">Atelier : 27 février 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Semaine de relâche</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Aucun</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>9</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 10 mars 2017</li>
                    <li class="text-muted small">Atelier : 6 mars 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                    <li>Remise TP1</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>10</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 17 mars 2017</li>
                    <li class="text-muted small">Atelier : 13 mars 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>11</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 24 mars 2017</li>
                    <li class="text-muted small">Atelier : 20 mars 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>12</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 31 mars 2017</li>
                    <li class="text-muted small">Atelier : 27 mars 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                    <li>Énoncé TP2</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>13</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 7 avril 2017</li>
                    <li class="text-muted small">Atelier : 3 avril 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>14</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 14 avril 2017</li>
                    <li class="text-muted small">Atelier : 10 avril 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Congé férié</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>15</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 21 avril 2017</li>
                    <li class="text-muted small">Atelier : 17 avril 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                    <li>Préparation à l'examen</li>
                    <li>Remise TP2</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Congé férié</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>16</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 28 avril 2017</li>
                    <li class="text-muted small">Atelier : 24 avril 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Examen final</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Aucun</li>
                  </ul>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>

      <div class="row">
        <div class="col-xs-12 text-center page-footer">
          <p class="h3">Matériel complémentaire</p>
          <p><a href="https://github.com/jacquesberger/exemplesINF3005">Exemples</a></p>
        </div>
      </div>

      <div class="row" style="margin-top:3em">
        <div class="col-xs-12 text-center page-footer">
          <p>&copy; Jacques Berger <strong>2017</strong></p>
        </div>
      </div>
    </div>

    <script src="/vendor/jquery/jquery.min.js"></script>
    <script src="/vendor/bootstrap/js/bootstrap.min.js"></script>
  </body>
</html>


================================================
File: Flask/jberger-extends/index.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask, render_template

app = Flask(__name__, static_url_path="", static_folder="static")


@app.route('/')
def page_accueil():
    return render_template('accueil.html')


@app.route('/inf3005/')
def page_prog_web_avancee():
    return render_template('inf3005.html')


================================================
File: Flask/jberger-extends/makefile
================================================
export FLASK_APP=index.py

run:
	flask run


================================================
File: Flask/jberger-extends/static/vendor/bootstrap/css/bootstrap-theme.css
================================================
/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
.btn-default,
.btn-primary,
.btn-success,
.btn-info,
.btn-warning,
.btn-danger {
  text-shadow: 0 -1px 0 rgba(0, 0, 0, .2);
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 1px rgba(0, 0, 0, .075);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 1px rgba(0, 0, 0, .075);
}
.btn-default:active,
.btn-primary:active,
.btn-success:active,
.btn-info:active,
.btn-warning:active,
.btn-danger:active,
.btn-default.active,
.btn-primary.active,
.btn-success.active,
.btn-info.active,
.btn-warning.active,
.btn-danger.active {
  -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
          box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
}
.btn-default.disabled,
.btn-primary.disabled,
.btn-success.disabled,
.btn-info.disabled,
.btn-warning.disabled,
.btn-danger.disabled,
.btn-default[disabled],
.btn-primary[disabled],
.btn-success[disabled],
.btn-info[disabled],
.btn-warning[disabled],
.btn-danger[disabled],
fieldset[disabled] .btn-default,
fieldset[disabled] .btn-primary,
fieldset[disabled] .btn-success,
fieldset[disabled] .btn-info,
fieldset[disabled] .btn-warning,
fieldset[disabled] .btn-danger {
  -webkit-box-shadow: none;
          box-shadow: none;
}
.btn-default .badge,
.btn-primary .badge,
.btn-success .badge,
.btn-info .badge,
.btn-warning .badge,
.btn-danger .badge {
  text-shadow: none;
}
.btn:active,
.btn.active {
  background-image: none;
}
.btn-default {
  text-shadow: 0 1px 0 #fff;
  background-image: -webkit-linear-gradient(top, #fff 0%, #e0e0e0 100%);
  background-image:      -o-linear-gradient(top, #fff 0%, #e0e0e0 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#e0e0e0));
  background-image:         linear-gradient(to bottom, #fff 0%, #e0e0e0 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#ffe0e0e0', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #dbdbdb;
  border-color: #ccc;
}
.btn-default:hover,
.btn-default:focus {
  background-color: #e0e0e0;
  background-position: 0 -15px;
}
.btn-default:active,
.btn-default.active {
  background-color: #e0e0e0;
  border-color: #dbdbdb;
}
.btn-default.disabled,
.btn-default[disabled],
fieldset[disabled] .btn-default,
.btn-default.disabled:hover,
.btn-default[disabled]:hover,
fieldset[disabled] .btn-default:hover,
.btn-default.disabled:focus,
.btn-default[disabled]:focus,
fieldset[disabled] .btn-default:focus,
.btn-default.disabled.focus,
.btn-default[disabled].focus,
fieldset[disabled] .btn-default.focus,
.btn-default.disabled:active,
.btn-default[disabled]:active,
fieldset[disabled] .btn-default:active,
.btn-default.disabled.active,
.btn-default[disabled].active,
fieldset[disabled] .btn-default.active {
  background-color: #e0e0e0;
  background-image: none;
}
.btn-primary {
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #265a88 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #265a88 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#265a88));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #265a88 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff265a88', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #245580;
}
.btn-primary:hover,
.btn-primary:focus {
  background-color: #265a88;
  background-position: 0 -15px;
}
.btn-primary:active,
.btn-primary.active {
  background-color: #265a88;
  border-color: #245580;
}
.btn-primary.disabled,
.btn-primary[disabled],
fieldset[disabled] .btn-primary,
.btn-primary.disabled:hover,
.btn-primary[disabled]:hover,
fieldset[disabled] .btn-primary:hover,
.btn-primary.disabled:focus,
.btn-primary[disabled]:focus,
fieldset[disabled] .btn-primary:focus,
.btn-primary.disabled.focus,
.btn-primary[disabled].focus,
fieldset[disabled] .btn-primary.focus,
.btn-primary.disabled:active,
.btn-primary[disabled]:active,
fieldset[disabled] .btn-primary:active,
.btn-primary.disabled.active,
.btn-primary[disabled].active,
fieldset[disabled] .btn-primary.active {
  background-color: #265a88;
  background-image: none;
}
.btn-success {
  background-image: -webkit-linear-gradient(top, #5cb85c 0%, #419641 100%);
  background-image:      -o-linear-gradient(top, #5cb85c 0%, #419641 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5cb85c), to(#419641));
  background-image:         linear-gradient(to bottom, #5cb85c 0%, #419641 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5cb85c', endColorstr='#ff419641', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #3e8f3e;
}
.btn-success:hover,
.btn-success:focus {
  background-color: #419641;
  background-position: 0 -15px;
}
.btn-success:active,
.btn-success.active {
  background-color: #419641;
  border-color: #3e8f3e;
}
.btn-success.disabled,
.btn-success[disabled],
fieldset[disabled] .btn-success,
.btn-success.disabled:hover,
.btn-success[disabled]:hover,
fieldset[disabled] .btn-success:hover,
.btn-success.disabled:focus,
.btn-success[disabled]:focus,
fieldset[disabled] .btn-success:focus,
.btn-success.disabled.focus,
.btn-success[disabled].focus,
fieldset[disabled] .btn-success.focus,
.btn-success.disabled:active,
.btn-success[disabled]:active,
fieldset[disabled] .btn-success:active,
.btn-success.disabled.active,
.btn-success[disabled].active,
fieldset[disabled] .btn-success.active {
  background-color: #419641;
  background-image: none;
}
.btn-info {
  background-image: -webkit-linear-gradient(top, #5bc0de 0%, #2aabd2 100%);
  background-image:      -o-linear-gradient(top, #5bc0de 0%, #2aabd2 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5bc0de), to(#2aabd2));
  background-image:         linear-gradient(to bottom, #5bc0de 0%, #2aabd2 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff2aabd2', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #28a4c9;
}
.btn-info:hover,
.btn-info:focus {
  background-color: #2aabd2;
  background-position: 0 -15px;
}
.btn-info:active,
.btn-info.active {
  background-color: #2aabd2;
  border-color: #28a4c9;
}
.btn-info.disabled,
.btn-info[disabled],
fieldset[disabled] .btn-info,
.btn-info.disabled:hover,
.btn-info[disabled]:hover,
fieldset[disabled] .btn-info:hover,
.btn-info.disabled:focus,
.btn-info[disabled]:focus,
fieldset[disabled] .btn-info:focus,
.btn-info.disabled.focus,
.btn-info[disabled].focus,
fieldset[disabled] .btn-info.focus,
.btn-info.disabled:active,
.btn-info[disabled]:active,
fieldset[disabled] .btn-info:active,
.btn-info.disabled.active,
.btn-info[disabled].active,
fieldset[disabled] .btn-info.active {
  background-color: #2aabd2;
  background-image: none;
}
.btn-warning {
  background-image: -webkit-linear-gradient(top, #f0ad4e 0%, #eb9316 100%);
  background-image:      -o-linear-gradient(top, #f0ad4e 0%, #eb9316 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f0ad4e), to(#eb9316));
  background-image:         linear-gradient(to bottom, #f0ad4e 0%, #eb9316 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff0ad4e', endColorstr='#ffeb9316', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #e38d13;
}
.btn-warning:hover,
.btn-warning:focus {
  background-color: #eb9316;
  background-position: 0 -15px;
}
.btn-warning:active,
.btn-warning.active {
  background-color: #eb9316;
  border-color: #e38d13;
}
.btn-warning.disabled,
.btn-warning[disabled],
fieldset[disabled] .btn-warning,
.btn-warning.disabled:hover,
.btn-warning[disabled]:hover,
fieldset[disabled] .btn-warning:hover,
.btn-warning.disabled:focus,
.btn-warning[disabled]:focus,
fieldset[disabled] .btn-warning:focus,
.btn-warning.disabled.focus,
.btn-warning[disabled].focus,
fieldset[disabled] .btn-warning.focus,
.btn-warning.disabled:active,
.btn-warning[disabled]:active,
fieldset[disabled] .btn-warning:active,
.btn-warning.disabled.active,
.btn-warning[disabled].active,
fieldset[disabled] .btn-warning.active {
  background-color: #eb9316;
  background-image: none;
}
.btn-danger {
  background-image: -webkit-linear-gradient(top, #d9534f 0%, #c12e2a 100%);
  background-image:      -o-linear-gradient(top, #d9534f 0%, #c12e2a 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9534f), to(#c12e2a));
  background-image:         linear-gradient(to bottom, #d9534f 0%, #c12e2a 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9534f', endColorstr='#ffc12e2a', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #b92c28;
}
.btn-danger:hover,
.btn-danger:focus {
  background-color: #c12e2a;
  background-position: 0 -15px;
}
.btn-danger:active,
.btn-danger.active {
  background-color: #c12e2a;
  border-color: #b92c28;
}
.btn-danger.disabled,
.btn-danger[disabled],
fieldset[disabled] .btn-danger,
.btn-danger.disabled:hover,
.btn-danger[disabled]:hover,
fieldset[disabled] .btn-danger:hover,
.btn-danger.disabled:focus,
.btn-danger[disabled]:focus,
fieldset[disabled] .btn-danger:focus,
.btn-danger.disabled.focus,
.btn-danger[disabled].focus,
fieldset[disabled] .btn-danger.focus,
.btn-danger.disabled:active,
.btn-danger[disabled]:active,
fieldset[disabled] .btn-danger:active,
.btn-danger.disabled.active,
.btn-danger[disabled].active,
fieldset[disabled] .btn-danger.active {
  background-color: #c12e2a;
  background-image: none;
}
.thumbnail,
.img-thumbnail {
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
          box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
}
.dropdown-menu > li > a:hover,
.dropdown-menu > li > a:focus {
  background-color: #e8e8e8;
  background-image: -webkit-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image:      -o-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f5f5f5), to(#e8e8e8));
  background-image:         linear-gradient(to bottom, #f5f5f5 0%, #e8e8e8 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5', endColorstr='#ffe8e8e8', GradientType=0);
  background-repeat: repeat-x;
}
.dropdown-menu > .active > a,
.dropdown-menu > .active > a:hover,
.dropdown-menu > .active > a:focus {
  background-color: #2e6da4;
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2e6da4));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #2e6da4 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2e6da4', GradientType=0);
  background-repeat: repeat-x;
}
.navbar-default {
  background-image: -webkit-linear-gradient(top, #fff 0%, #f8f8f8 100%);
  background-image:      -o-linear-gradient(top, #fff 0%, #f8f8f8 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#f8f8f8));
  background-image:         linear-gradient(to bottom, #fff 0%, #f8f8f8 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#fff8f8f8', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 5px rgba(0, 0, 0, .075);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 5px rgba(0, 0, 0, .075);
}
.navbar-default .navbar-nav > .open > a,
.navbar-default .navbar-nav > .active > a {
  background-image: -webkit-linear-gradient(top, #dbdbdb 0%, #e2e2e2 100%);
  background-image:      -o-linear-gradient(top, #dbdbdb 0%, #e2e2e2 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dbdbdb), to(#e2e2e2));
  background-image:         linear-gradient(to bottom, #dbdbdb 0%, #e2e2e2 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdbdbdb', endColorstr='#ffe2e2e2', GradientType=0);
  background-repeat: repeat-x;
  -webkit-box-shadow: inset 0 3px 9px rgba(0, 0, 0, .075);
          box-shadow: inset 0 3px 9px rgba(0, 0, 0, .075);
}
.navbar-brand,
.navbar-nav > li > a {
  text-shadow: 0 1px 0 rgba(255, 255, 255, .25);
}
.navbar-inverse {
  background-image: -webkit-linear-gradient(top, #3c3c3c 0%, #222 100%);
  background-image:      -o-linear-gradient(top, #3c3c3c 0%, #222 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#3c3c3c), to(#222));
  background-image:         linear-gradient(to bottom, #3c3c3c 0%, #222 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff3c3c3c', endColorstr='#ff222222', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-radius: 4px;
}
.navbar-inverse .navbar-nav > .open > a,
.navbar-inverse .navbar-nav > .active > a {
  background-image: -webkit-linear-gradient(top, #080808 0%, #0f0f0f 100%);
  background-image:      -o-linear-gradient(top, #080808 0%, #0f0f0f 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#080808), to(#0f0f0f));
  background-image:         linear-gradient(to bottom, #080808 0%, #0f0f0f 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff080808', endColorstr='#ff0f0f0f', GradientType=0);
  background-repeat: repeat-x;
  -webkit-box-shadow: inset 0 3px 9px rgba(0, 0, 0, .25);
          box-shadow: inset 0 3px 9px rgba(0, 0, 0, .25);
}
.navbar-inverse .navbar-brand,
.navbar-inverse .navbar-nav > li > a {
  text-shadow: 0 -1px 0 rgba(0, 0, 0, .25);
}
.navbar-static-top,
.navbar-fixed-top,
.navbar-fixed-bottom {
  border-radius: 0;
}
@media (max-width: 767px) {
  .navbar .navbar-nav .open .dropdown-menu > .active > a,
  .navbar .navbar-nav .open .dropdown-menu > .active > a:hover,
  .navbar .navbar-nav .open .dropdown-menu > .active > a:focus {
    color: #fff;
    background-image: -webkit-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
    background-image:      -o-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
    background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2e6da4));
    background-image:         linear-gradient(to bottom, #337ab7 0%, #2e6da4 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2e6da4', GradientType=0);
    background-repeat: repeat-x;
  }
}
.alert {
  text-shadow: 0 1px 0 rgba(255, 255, 255, .2);
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .25), 0 1px 2px rgba(0, 0, 0, .05);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .25), 0 1px 2px rgba(0, 0, 0, .05);
}
.alert-success {
  background-image: -webkit-linear-gradient(top, #dff0d8 0%, #c8e5bc 100%);
  background-image:      -o-linear-gradient(top, #dff0d8 0%, #c8e5bc 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dff0d8), to(#c8e5bc));
  background-image:         linear-gradient(to bottom, #dff0d8 0%, #c8e5bc 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdff0d8', endColorstr='#ffc8e5bc', GradientType=0);
  background-repeat: repeat-x;
  border-color: #b2dba1;
}
.alert-info {
  background-image: -webkit-linear-gradient(top, #d9edf7 0%, #b9def0 100%);
  background-image:      -o-linear-gradient(top, #d9edf7 0%, #b9def0 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9edf7), to(#b9def0));
  background-image:         linear-gradient(to bottom, #d9edf7 0%, #b9def0 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9edf7', endColorstr='#ffb9def0', GradientType=0);
  background-repeat: repeat-x;
  border-color: #9acfea;
}
.alert-warning {
  background-image: -webkit-linear-gradient(top, #fcf8e3 0%, #f8efc0 100%);
  background-image:      -o-linear-gradient(top, #fcf8e3 0%, #f8efc0 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fcf8e3), to(#f8efc0));
  background-image:         linear-gradient(to bottom, #fcf8e3 0%, #f8efc0 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffcf8e3', endColorstr='#fff8efc0', GradientType=0);
  background-repeat: repeat-x;
  border-color: #f5e79e;
}
.alert-danger {
  background-image: -webkit-linear-gradient(top, #f2dede 0%, #e7c3c3 100%);
  background-image:      -o-linear-gradient(top, #f2dede 0%, #e7c3c3 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f2dede), to(#e7c3c3));
  background-image:         linear-gradient(to bottom, #f2dede 0%, #e7c3c3 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2dede', endColorstr='#ffe7c3c3', GradientType=0);
  background-repeat: repeat-x;
  border-color: #dca7a7;
}
.progress {
  background-image: -webkit-linear-gradient(top, #ebebeb 0%, #f5f5f5 100%);
  background-image:      -o-linear-gradient(top, #ebebeb 0%, #f5f5f5 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#ebebeb), to(#f5f5f5));
  background-image:         linear-gradient(to bottom, #ebebeb 0%, #f5f5f5 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffebebeb', endColorstr='#fff5f5f5', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar {
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #286090 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #286090 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#286090));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #286090 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff286090', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-success {
  background-image: -webkit-linear-gradient(top, #5cb85c 0%, #449d44 100%);
  background-image:      -o-linear-gradient(top, #5cb85c 0%, #449d44 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5cb85c), to(#449d44));
  background-image:         linear-gradient(to bottom, #5cb85c 0%, #449d44 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5cb85c', endColorstr='#ff449d44', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-info {
  background-image: -webkit-linear-gradient(top, #5bc0de 0%, #31b0d5 100%);
  background-image:      -o-linear-gradient(top, #5bc0de 0%, #31b0d5 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5bc0de), to(#31b0d5));
  background-image:         linear-gradient(to bottom, #5bc0de 0%, #31b0d5 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff31b0d5', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-warning {
  background-image: -webkit-linear-gradient(top, #f0ad4e 0%, #ec971f 100%);
  background-image:      -o-linear-gradient(top, #f0ad4e 0%, #ec971f 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f0ad4e), to(#ec971f));
  background-image:         linear-gradient(to bottom, #f0ad4e 0%, #ec971f 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff0ad4e', endColorstr='#ffec971f', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-danger {
  background-image: -webkit-linear-gradient(top, #d9534f 0%, #c9302c 100%);
  background-image:      -o-linear-gradient(top, #d9534f 0%, #c9302c 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9534f), to(#c9302c));
  background-image:         linear-gradient(to bottom, #d9534f 0%, #c9302c 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9534f', endColorstr='#ffc9302c', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-striped {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:      -o-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:         linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
}
.list-group {
  border-radius: 4px;
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
          box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
}
.list-group-item.active,
.list-group-item.active:hover,
.list-group-item.active:focus {
  text-shadow: 0 -1px 0 #286090;
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #2b669a 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #2b669a 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2b669a));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #2b669a 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2b669a', GradientType=0);
  background-repeat: repeat-x;
  border-color: #2b669a;
}
.list-group-item.active .badge,
.list-group-item.active:hover .badge,
.list-group-item.active:focus .badge {
  text-shadow: none;
}
.panel {
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, .05);
          box-shadow: 0 1px 2px rgba(0, 0, 0, .05);
}
.panel-default > .panel-heading {
  background-image: -webkit-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image:      -o-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f5f5f5), to(#e8e8e8));
  background-image:         linear-gradient(to bottom, #f5f5f5 0%, #e8e8e8 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5', endColorstr='#ffe8e8e8', GradientType=0);
  background-repeat: repeat-x;
}
.panel-primary > .panel-heading {
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2e6da4));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #2e6da4 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2e6da4', GradientType=0);
  background-repeat: repeat-x;
}
.panel-success > .panel-heading {
  background-image: -webkit-linear-gradient(top, #dff0d8 0%, #d0e9c6 100%);
  background-image:      -o-linear-gradient(top, #dff0d8 0%, #d0e9c6 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dff0d8), to(#d0e9c6));
  background-image:         linear-gradient(to bottom, #dff0d8 0%, #d0e9c6 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdff0d8', endColorstr='#ffd0e9c6', GradientType=0);
  background-repeat: repeat-x;
}
.panel-info > .panel-heading {
  background-image: -webkit-linear-gradient(top, #d9edf7 0%, #c4e3f3 100%);
  background-image:      -o-linear-gradient(top, #d9edf7 0%, #c4e3f3 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9edf7), to(#c4e3f3));
  background-image:         linear-gradient(to bottom, #d9edf7 0%, #c4e3f3 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9edf7', endColorstr='#ffc4e3f3', GradientType=0);
  background-repeat: repeat-x;
}
.panel-warning > .panel-heading {
  background-image: -webkit-linear-gradient(top, #fcf8e3 0%, #faf2cc 100%);
  background-image:      -o-linear-gradient(top, #fcf8e3 0%, #faf2cc 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fcf8e3), to(#faf2cc));
  background-image:         linear-gradient(to bottom, #fcf8e3 0%, #faf2cc 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffcf8e3', endColorstr='#fffaf2cc', GradientType=0);
  background-repeat: repeat-x;
}
.panel-danger > .panel-heading {
  background-image: -webkit-linear-gradient(top, #f2dede 0%, #ebcccc 100%);
  background-image:      -o-linear-gradient(top, #f2dede 0%, #ebcccc 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f2dede), to(#ebcccc));
  background-image:         linear-gradient(to bottom, #f2dede 0%, #ebcccc 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2dede', endColorstr='#ffebcccc', GradientType=0);
  background-repeat: repeat-x;
}
.well {
  background-image: -webkit-linear-gradient(top, #e8e8e8 0%, #f5f5f5 100%);
  background-image:      -o-linear-gradient(top, #e8e8e8 0%, #f5f5f5 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#e8e8e8), to(#f5f5f5));
  background-image:         linear-gradient(to bottom, #e8e8e8 0%, #f5f5f5 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffe8e8e8', endColorstr='#fff5f5f5', GradientType=0);
  background-repeat: repeat-x;
  border-color: #dcdcdc;
  -webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, .05), 0 1px 0 rgba(255, 255, 255, .1);
          box-shadow: inset 0 1px 3px rgba(0, 0, 0, .05), 0 1px 0 rgba(255, 255, 255, .1);
}
/*# sourceMappingURL=bootstrap-theme.css.map */


================================================
File: Flask/jberger-extends/static/vendor/bootstrap/js/npm.js
================================================
// This file is autogenerated via the `commonjs` Grunt task. You can require() this file in a CommonJS environment.
require('../../js/transition.js')
require('../../js/alert.js')
require('../../js/button.js')
require('../../js/carousel.js')
require('../../js/collapse.js')
require('../../js/dropdown.js')
require('../../js/modal.js')
require('../../js/tooltip.js')
require('../../js/popover.js')
require('../../js/scrollspy.js')
require('../../js/tab.js')
require('../../js/affix.js')

================================================
File: Flask/jberger-extends/templates/accueil.html
================================================
{% extends "layout.html" %}
{% block content %}      
      <div class="row">
        <div class="col-xs-12 text-center page-header">
          <h1>Jacques Berger</h1>
          <p>Mes pensées sur le développement de logiciels et l'enseignement de l'informatique.</p>
        </div>
      </div>
      <div class="row">
        <div class="col-sm-7 col-sm-offset-1">
          <div class="post"><p class="h3">L'enseignement ou le développement?</p><p class="text-muted small">Article publié le 24 avril 2015</p><p>J'ai commencé ma carrière de développeur bien avant ma carrière d'enseignant.
            Le démarrage d'une carrière d'enseignant prend un certain temps, il
            faut être très patient. Au début, je n'enseignais qu'un seul cours
            par session, et pas à toutes les sessions. À cette époque,
            je travaillais comme développeur à temps complet et j'enseignais le
            soir (ou sur l'heure du midi).</p><p>Ça m'a pris environ 3 ans pour finalement avoir la chance d'enseigner
            beaucoup plus, c'est-à-dire de 2 à 3 cours stables par session.
            Le terme stable est discutable étant donné que je suis contractuel.</p><p>À partir de ce moment, j'ai commencé à m'interroger à savoir si je
            préfère l'enseignement au développement de logiciels et si je devrais
            quitter le développement pour ne faire que de l'enseignement. Plus
            tard, j'ai aussi eu la réflexion inverse, c'est-à-dire de quitter
            l'enseignement pour me consacrer à ma première passion, le développement
            de logiciels.</p><p>J'ai essayé les deux! Avant d'enseigner, je ne faisais que du
            développement. Il y a 4 ans, un événement a fait en sorte que j'ai
            voulu libérer mon horaire le plus possible et j'ai quitté temporairement
            le développement pour ne faire que de l'enseignement pendant une année
            complète. J'ai aimé les deux expériences, donc ça ne m'a pas beaucoup
            aidé à faire un choix.</p><p>À force de réfléchir et d'expérimenter, j'en suis venu à la conclusion
            que j'avais besoin des deux en même temps! Je n'ai pas envie de choisir
            et d'en sacrifier un! Je crois sincèrement que l'enseignement fait de
            moi un meilleur développeur, car ça m'oblige à rester éveillé aux
            nouveautés du marché. Je crois également que le développement fait de
            moi un meilleur enseignant, car ça m'alimente en anecdotes et ça me
            donne l'occasion de réfléchir sur les applications des notions que
            j'enseigne. Bref, les deux se complètent à merveille!</p><p>Il est impensable de faire les deux à temps plein, pour plusieurs
            raisons... Premièrement, l'épuisement professionnel n'est jamais
            quelque chose de bien. Deuxièmement, je n'ai pas l'intention d'être un
            fantôme dans ma famille, je dois donc libérer du temps familial. Le
            plus possible.</p><p>La meilleure solution que j'ai trouvé jusqu'à date, c'est d'enseigner
            à temps plein, soit environ 8 cours par année, et de faire du
            développement de logiciels à temps partiel, soit 3 jours par semaine.
            Je dois dire par contre que j'aimerais avoir plus de temps pour développer,
            mais je ne peux pas tout faire... C'est un problème sans solution.
            Ça me convient pour l'instant.</p></div><hr><div class="post"><p class="h3">Comment je me prépare à une entrevue...</p><p class="text-muted small">Article publié le 22 janvier 2013</p><p>Plusieurs personnes croient qu'il n'est pas nécessaire de se
	              préparer avant une entrevue d'emploi, que l'employeur doit vous
	              voir au naturel, car c'est ainsi qu'il vous verra travailler.
	              Ce n'est pas faux! Mais si on considère que les entreprises
	              veulent des employés méthodiques, rigoureux et travaillants,
	              un minimum de préparation est de mise.</p><p>Je ne crois pas détenir la vérité absolue, ni même la meilleure
	              façon de se préparer pour une entrevue. Je vais simplement
	              décrire comment je me prépare pour une telle rencontre dans
	              le but d'aider ceux qui ne savent pas comment s'y prendre.
	              Ça fonctionne bien pour moi, peut-être que ça ne fonctionnera
	              pas pour vous. Aucune garantie.</p><p>Vous avez déjà un premier pas de fait. Vous avez envoyé votre
	              CV et il était suffisamment intéressant pour vous permettre
	              de décrocher une entrevue. Célébration! OK, mais pas trop
	              longtemps, on a du travail! Je prends quand même une petite
	              Heineken pour célébrer cette petite victoire.</p><p>La première étape est d'apprendre à connaître l'entreprise. Ah oui!
	              Des fois, on envoie nos CV un peu n'importe où, sans trop
	              regarder, alors il est possible qu'une de ces entreprises vous
	              contacte, même si vous ne la connaissez pas du tout. Bref,
	              que vous la connaissiez ou non, prenez le temps d'aller sur le
	              site web de la compagnie et d'y lire à peu près tout ce que vous
	              y trouverez. Ensuite, vous aurez le plaisir de dire à l'entrevue
	              «Ah oui, j'ai lu ça sur votre site web!»</p><p>Dans certains cas, c'est la seule chose que vous pourrez faire,
	              lire le contenu du site web. Sinon, vous pouvez faire quelques
	              recherches supplémentaires pour trouver des articles qui parlent
	              de cette entreprise. Si l'organisation vient tout juste de gagner
	              un prix quelconque, en glisser un mot à l'entrevue montrera que
	              vous êtes bien renseigné.</p><p>Si vous avez la chance de connaître quelqu'un qui travaille
	              pour cette entreprise, c'est merveilleux! Faites aller votre
	              réseau de contacts. Contactez cette personne et posez-lui des
	              questions sur l'ambiance de travail, sur ses collègues et sur
	              les outils utilisés dans l'entreprise (langages de programmation,
	              frameworks, etc.). Une vision de l'intérieur, c'est toujours
	              bon.</p><p>Si votre contact vous parle d'outils que vous ne connaissez pas,
	              c'est le moment idéal de vous documenter. Lisez rapidement sur
	              ces outils. Si vous avez le temps, essayez-les! Téléchargez des
	              versions gratuites ou d'évaluation et faites une petite
	              preuve de concept avec ces outils. C'est le meilleur moyen d'en
	              saisir l'essence rapidement. Ensuite, durant l'entrevue, si on
	              vous demande si vous connaissez un outil, vous
	              pourrez dire que vous ne connaissez pas l'outil en profondeur 
	              mais que vous l'avez essayé il y a quelques jours en vous 
	              préparant à l'entrevue. Décrivez la preuve de concept que vous
	              avez faite. Ils seront surpris que vous ayez pris le temps de
	              faire cette recherche.</p><p>C'est beaucoup de travail tout ça? Oui, évidemment. Je crois
	              fermement que les efforts finissent toujours par payer. Si c'est
	              trop de travail pour vous, ou que vous n'avez pas cette discipline,
	              ne le faites pas. Vous finirez quand même par trouver du
	              travail. Par contre, si vous voulez vraiment décrocher cet
	              emploi, n'ayez pas peur de mettre des efforts. Et n'ayez pas
	              peur d'échouer. C'est en échouant qu'on apprend le plus.</p></div><hr><div class="post"><p class="h3">25 candidats pour un poste d'HTML</p><p class="text-muted small">Article publié le 14 octobre 2012</p><p>Une petite anecdote que j'ai vécue lorsque j'ai terminé mon
			      cégep et qui me fait toujours rire, même aujourd'hui.</p><p>En 2003, le marché du développement de logiciels n'était pas
			      aussi intéressant qu'aujourd'hui à Montréal. À l'époque, il
			      y avait plus d'offre que de demande et les emplois étaient plus
			      rares. Du moins, les bons emplois étaient plus rares.</p><p>Fraîchement sorti du cégep avec mon DEC en informatique de
			      gestion en poche, je me suis lancé dans la recherche d'un
			      emploi à Montréal. Durant les premiers mois de ma recherche
			      d'emploi, j'ai passé plusieurs entrevues dans diverses entreprises.
			      L'une de ces entrevues m'a frappé plus que les autres.</p><p>Il s'agissait d'un poste bien peu intéressant, pour une
			      entreprise qui développait un logiciel comptable. La tâche
			      principal de ce poste était de prendre un formulaire papier du
			      gouvernement et d'écrire un document HTML qui reproduit le plus
			      fidèlement possible le formulaire papier original. En gros, du
			      HTML et du CSS assez élémentaire. L'entreprise offrait 
			      25,000$ par année pour ce poste et exigeait
			      à l'employé d'être présent au bureau au moins 38 heures par
			      semaine.</p><p>Le plus étonnant dans tout ça, ce n'est pas le faible salaire
			      ou les tâches peu intéressantes, c'est définitivement la
			      méthode de recrutement de l'entreprise. Mon entrevue a durée
			      près de deux heures. J'ai eu droit à une entrevue complète
			      en français et en anglais, à un test technique sur le HTML et
			      finalement à un test de personnalité. Finalement, le recruteur
			      m'a confié qu'il devait rencontrer 25 candidats au total pour
			      ce poste.</p><p>Évidemment, je n'ai pas eu l'emploi. Par contre, encore
			      aujourd'hui, je suis étonné par cette expérience. Une entrevue
			      de 2 heures, bilingue, avec test technique et test de 
			      personnalité, multipliée par 25 candidats, pour un poste d'HTML
			      élémentaire! Les coûts de recrutement de cette entreprise
			      doivent être incroyables.</p></div>        </div>
        <div class="col-sm-3">
          <a class="twitter-timeline" href="https://twitter.com/jacquesberger" data-widget-id="346830975084421121">Tweets de @jacquesberger</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
        </div>
      </div>
{% endblock %}


================================================
File: Flask/jberger-extends/templates/inf3005.html
================================================
{% extends "layout.html" %}
{% block content %}      
      <div class="row">
        <div class="col-xs-12 text-center page-header">
          <h1>Programmation web avancée</h1>
          <p>INF3005-50 Hiver 2017</p>
          <p>Moniteur : Philippe Pépos-Petitclerc</p>
          <p><a href="material/PlanDeCours.pdf">Plan de cours</a></p>
        </div>
      </div>

      <div class="row">
        <div class="col-sm-8 col-sm-offset-2">
          <p class="h3 text-center">Calendrier</p>
          <table class="table">
            <thead>
              <tr>
                <th>Semaine</th>
                <th>Dates</th>
                <th>Contenu</th>
                <th>Laboratoire</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>1</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 13 janvier 2017</li>
                    <li class="text-muted small">Atelier : 9 janvier 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li><a href="/notes/files/INF3005-Introduction.pdf">Introduction</a></li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Aucun</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>2</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 20 janvier 2017</li>
                    <li class="text-muted small">Atelier : 16 janvier 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li><a href="/notes/files/INF3005-Python.pdf">Python</a></li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Aucun</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>3</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 27 janvier 2017</li>
                    <li class="text-muted small">Atelier : 23 janvier 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li><a href="/notes/files/INF3005-Python-partie2.pdf">Python - partie 2</a></li>
                    <li><a href="/notes/files/INF3005-BD.pdf">Utilisation d'une base de données</a></li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li><a href="https://github.com/jacquesberger/exemplesINF3005/blob/master/Ateliers/Python/enonce.md">Introduction à Python</a></li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>4</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 3 février 2017</li>
                    <li class="text-muted small">Atelier : 30 janvier 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>PEP8</li>
                    <li>Flask</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li><a href="https://github.com/jacquesberger/exemplesINF3005/blob/master/Ateliers/BD/enonce.md">SQLite avec Python</a></li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>5</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 10 février 2017</li>
                    <li class="text-muted small">Atelier : 6 février 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                    <li>Énoncé TP1</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>6</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 17 février 2017</li>
                    <li class="text-muted small">Atelier : 13 février 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                    <li>Préparation à l'examen</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>7</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 24 février 2017</li>
                    <li class="text-muted small">Atelier : 20 février 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Examen intra</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Aucun</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>8</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 3 mars 2017</li>
                    <li class="text-muted small">Atelier : 27 février 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Semaine de relâche</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Aucun</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>9</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 10 mars 2017</li>
                    <li class="text-muted small">Atelier : 6 mars 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                    <li>Remise TP1</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>10</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 17 mars 2017</li>
                    <li class="text-muted small">Atelier : 13 mars 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>11</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 24 mars 2017</li>
                    <li class="text-muted small">Atelier : 20 mars 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>12</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 31 mars 2017</li>
                    <li class="text-muted small">Atelier : 27 mars 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                    <li>Énoncé TP2</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>13</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 7 avril 2017</li>
                    <li class="text-muted small">Atelier : 3 avril 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>14</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 14 avril 2017</li>
                    <li class="text-muted small">Atelier : 10 avril 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Congé férié</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>15</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 21 avril 2017</li>
                    <li class="text-muted small">Atelier : 17 avril 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>À déterminer</li>
                    <li>Préparation à l'examen</li>
                    <li>Remise TP2</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Congé férié</li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>16</td>
                <td>
                  <ul class="list-unstyled">
                    <li class="text-muted small">Cours : 28 avril 2017</li>
                    <li class="text-muted small">Atelier : 24 avril 2017</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Examen final</li>
                  </ul>
                </td>
                <td>
                  <ul class="list-unstyled">
                    <li>Aucun</li>
                  </ul>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
{% endblock %}


================================================
File: Flask/jberger-extends/templates/layout.html
================================================
<!DOCTYPE html>
<html lang="fr">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Jacques Berger - enseignant, développeur et musicien</title>
    <link href="/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
  </head>
  <body>
    <nav class="navbar navbar-default">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-menu" aria-expanded="false">
        <span class="sr-only">Navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="/">jberger.org</a>
    </div>

    <div class="collapse navbar-collapse" id="navbar-menu">
      <ul class="nav navbar-nav">
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Cours <span class="caret"></span></a>
          <ul class="dropdown-menu">
            <li><a href="/inf1256/">INF1256 - Informatique pour les sciences de la gestion</a></li>
            <li><a href="/inf2015/">INF2015 - Développement de logiciels dans un environnement Agile</a></li>
            <li><a href="/inf2005/">INF2005 - Programmation web</a></li>
            <li><a href="/inf3005/">INF3005 - Programmation web avancée</a></li>
            <li><a href="/inf3135/">INF3135 - Construction et maintenance de logiciels</a></li>
            <li><a href="/inf3172/">INF3172 - Principes des systèmes d'exploitation</a></li>
            <li><a href="/inf3180/">INF3180 - Fichiers et bases de données</a></li>
            <li><a href="/inf4150/">INF4150 - Interfaces personnes-machines</a></li>
            <li><a href="/inf4170/">INF4170 - Architecture des ordinateurs</a></li>
            <li><a href="/inf4375/">INF4375 - Paradigmes des échances Internet</a></li>
            <li><a href="/inf5153/">INF5153 - Génie logiciel : conception</a></li>
            <li><a href="/inf2170/">INF2170 - Organisation des ordinateurs et assembleur</a></li>
            <li><a href="/inm5151/">INM5151 - Projet d'analyse et de modélisation</a></li>
            <li><a href="/mgl7460/">MGL7460 - Réalisation et maintenance des logiciels</a></li>
          </ul>
        </li>
      </ul>
      <ul class="nav navbar-nav navbar-right">
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://twitter.com/jacquesberger">
              <img alt="Twitter Logo" src="/img/Twitter_Logo_White_On_Blue.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://www.facebook.com/jacquesbergerTI/">
              <img alt="Facebook Logo" src="/img/FB-f-Logo__blue_512.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://ca.linkedin.com/in/jacquesberger">
              <img alt="LinkedIn Logo" src="/img/In-2C-128px-TM.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://www.instagram.com/jacquesberger/">
              <img alt="Instagram Logo" src="/img/glyph-logo_May2016.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
        <li>
          <div class="navbar-header">
            <a class="navbar-brand" href="https://github.com/jacquesberger">
              <img alt="Github Logo" src="/img/GitHub-Mark-120px-plus.png" style="width:auto; height:auto; max-width:24px;">
            </a>
          </div>
        </li>
      </ul>
    </div>
  </div>
</nav>
    <div class="container-fluid">

      {% block content %}{% endblock %}

      <div class="row" style="margin-top:3em">
        <div class="col-xs-12 text-center">
          <p>&copy; Jacques Berger <strong>2016</strong></p>
        </div>
      </div>
    </div>
    <script src="/vendor/jquery/jquery.min.js"></script>
    <script src="/vendor/bootstrap/js/bootstrap.min.js"></script>
  </body>
</html>


================================================
File: Flask/login/database.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import sqlite3


class Database:
    def __init__(self):
        self.connection = None

    def get_connection(self):
        if self.connection is None:
            self.connection = sqlite3.connect('db/users.db')
        return self.connection

    def disconnect(self):
        if self.connection is not None:
            self.connection.close()

    def create_user(self, username, email, salt, hashed_password):
        connection = self.get_connection()
        connection.execute(("insert into users(utilisateur, email, salt, hash)"
                            " values(?, ?, ?, ?)"), (username, email, salt,
                                                     hashed_password))
        connection.commit()

    def get_user_login_info(self, username):
        cursor = self.get_connection().cursor()
        cursor.execute(("select salt, hash from users where utilisateur=?"),
                       (username,))
        user = cursor.fetchone()
        if user is None:
            return None
        else:
            return user[0], user[1]

    def save_session(self, id_session, username):
        connection = self.get_connection()
        connection.execute(("insert into sessions(id_session, utilisateur) "
                            "values(?, ?)"), (id_session, username))
        connection.commit()

    def delete_session(self, id_session):
        connection = self.get_connection()
        connection.execute(("delete from sessions where id_session=?"),
                           (id_session,))
        connection.commit()

    def get_session(self, id_session):
        cursor = self.get_connection().cursor()
        cursor.execute(("select utilisateur from sessions where id_session=?"),
                       (id_session,))
        data = cursor.fetchone()
        if data is None:
            return None
        else:
            return data[0]


================================================
File: Flask/login/index.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask
from flask import render_template
from flask import g
from flask import request
from flask import redirect
from flask import session
from flask import Response
from .database import Database
import hashlib
import uuid
from functools import wraps

app = Flask(__name__)


def get_db():
    db = getattr(g, '_database', None)
    if db is None:
        g._database = Database()
    return g._database


@app.teardown_appcontext
def close_connection(exception):
    db = getattr(g, '_database', None)
    if db is not None:
        db.disconnect()


@app.route('/')
def start_page():
    username = None
    if "id" in session:
        username = get_db().get_session(session["id"])
    return render_template('accueil.html', username=username)


@app.route('/confirmation')
def confirmation_page():
    return render_template('confirmation.html')


@app.route('/formulaire', methods=["GET", "POST"])
def formulaire_creation():
    if request.method == "GET":
        return render_template("formulaire.html")
    else:
        username = request.form["username"]
        password = request.form["password"]
        email = request.form["email"]
        # Vérifier que les champs ne sont pas vides
        if username == "" or password == "" or email == "":
            return render_template("formulaire.html",
                                   error="Tous les champs sont obligatoires.")

        # TODO Faire la validation du formulaire
        salt = uuid.uuid4().hex
        hashed_password = hashlib.sha512(str(password + salt).encode("utf-8")).hexdigest()
        db = get_db()
        db.create_user(username, email, salt, hashed_password)

        return redirect("/confirmation")


@app.route('/login', methods=["POST"])
def log_user():
    username = request.form["username"]
    password = request.form["password"]
    # Vérifier que les champs ne sont pas vides
    if username == "" or password == "":
        return redirect("/")

    user = get_db().get_user_login_info(username)
    if user is None:
        return redirect("/")

    salt = user[0]
    hashed_password = hashlib.sha512(str(password + salt).encode("utf-8")).hexdigest()
    if hashed_password == user[1]:
        # Accès autorisé
        id_session = uuid.uuid4().hex
        get_db().save_session(id_session, username)
        session["id"] = id_session
        return redirect("/")
    else:
        return redirect("/")


def authentication_required(f):
    @wraps(f)
    def decorated(*args, **kwargs):
        if not is_authenticated(session):
            return send_unauthorized()
        return f(*args, **kwargs)
    return decorated


@app.route('/logout')
@authentication_required
def logout():
    id_session = session["id"]
    session.pop('id', None)
    get_db().delete_session(id_session)
    return redirect("/")


def is_authenticated(session):
    return "id" in session


def send_unauthorized():
    return Response('Could not verify your access level for that URL.\n'
                    'You have to login with proper credentials', 401,
                    {'WWW-Authenticate': 'Basic realm="Login Required"'})


app.secret_key = "(*&*&322387he738220)(*(*22347657"


================================================
File: Flask/login/makefile
================================================
export FLASK_APP=index.py

run:
	flask run


================================================
File: Flask/login/db/users.sql
================================================
create table users (
  id integer primary key,
  utilisateur varchar(25),
  email varchar(100),
  salt varchar(32),
  hash varchar(128)
);

create table sessions (
  id integer primary key,
  id_session varchar(32),
  utilisateur varchar(25)
);


================================================
File: Flask/login/templates/accueil.html
================================================
{% extends "layout.html" %}
{% block content %}      
  <h1>Bonsoir!</h1>
  <p><a href="/formulaire">Cliquez ici pour créer un compte</a></p>
  {% if username %}
    <p>Vous êtes connecté en tant que {{ username }}.</p>
    <p><a href="/logout">Se déconnecter</a></p>
  {% else %}
    <p>Vous n'êtes pas connecté.</p>
    <form action="/login" method="POST">
      <label for="champ_username">Nom d'utilisateur</label>&nbsp;<input type="text" id="champ_username" name="username" maxlength="20">
      <br>
      <label for="champ_password">Mot de passe</label>&nbsp;<input type="password" id="champ_password" name="password" maxlength="40">
      <br>
      <input type="submit" value="Se connecter">
    </form>
  {% endif %}
{% endblock %}      


================================================
File: Flask/login/templates/confirmation.html
================================================
{% extends "layout.html" %}
{% block content %}
  <h1>Votre compte a été créé.</h1>
  <p><a href="/">Retour à la page d'accueil</a></p>
{% endblock %}


================================================
File: Flask/login/templates/formulaire.html
================================================
{% extends "layout.html" %}
{% block content %}
  <h1>Création d'un compte</h1>
  {% if error %}
    <p style="color:#F00">Tous les champs sont obligatoires. Veuillez recommencer.</p>
  {% endif %}
  <form action="/formulaire" method="POST">
    <label for="champ_username">Nom d'utilisateur</label>&nbsp;<input type="text" id="champ_username" name="username" maxlength="25">
    <br>
    <label for="champ_password">Mot de passe</label>&nbsp;<input type="password" id="champ_password" name="password" maxlength="40">
    <br>
    <label for="champ_email">Courriel</label>&nbsp;<input type="text" id="champ_email" name="email" maxlength="100">
    <br>
    <input type="submit" value="Soumettre">
  </form>
{% endblock %}


================================================
File: Flask/login/templates/layout.html
================================================
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Exemple de login</title>
</head>
<body>
  {% block content %}{% endblock %}
</body>
</html>


================================================
File: Flask/rest/database.py
================================================
# Copyright 2020 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import sqlite3
from .person import Person


class Database:
    def __init__(self):
        self.connection = None

    def get_connection(self):
        if self.connection is None:
            self.connection = sqlite3.connect('db/person.db')
        return self.connection

    def disconnect(self):
        if self.connection is not None:
            self.connection.close()

    def read_all_persons(self):
        cursor = self.get_connection().cursor()
        cursor.execute("select rowid, lastname, firstname, age from person")
        persons = cursor.fetchall()
        return [Person(one_person[0], one_person[1], one_person[2],
                       one_person[3]) for one_person in persons]

    def read_one_person(self, id):
        cursor = self.get_connection().cursor()
        cursor.execute("select rowid, lastname, firstname, "
                       "age from person where rowid = ?", (id,))
        persons = cursor.fetchall()
        if len(persons) is 0:
            return None
        else:
            person = persons[0]
            return Person(person[0], person[1], person[2], person[3])

    def save_person(self, person):
        connection = self.get_connection()
        if person.id is None:
            connection.execute("insert into person(lastname, firstname, age) "
                               "values(?, ?, ?)",
                               (person.lastname, person.firstname, person.age))
            connection.commit()

            cursor = connection.cursor()
            cursor.execute("select last_insert_rowid()")
            result = cursor.fetchall()
            person.id = result[0][0]
        else:
            connection.execute("update person set lastname = ?, firstname = ?,"
                               "age = ? where rowid = ?",
                               (person.lastname, person.firstname, person.age,
                                person.id))
            connection.commit()
        return person

    def delete_person(self, person):
        connection = self.get_connection()
        connection.execute("delete from person where rowid = ?", (person.id,))
        connection.commit()


================================================
File: Flask/rest/doc.raml
================================================
#%RAML 1.0
title: Example of REST API for INF5190
mediaType: application/json
types:
  NewPerson:
    properties:
      lastname:
        type: string
        required: true
      firstname:
        type: string
        required: true
      age:
        type: number
        required: true
  ExistingPerson:
    properties:
      id:
        type: string
        required: true
      lastname:
        type: string
        required: true
      firstname:
        type: string
        required: true
      age:
        type: number
        required: true
/api:
  /person:
    get:
      description: Extract the data of all the persons.
      responses:
        200:
          body:
            application/json:
              type: ExistingPerson[]
    post:
      description: Create a new person.
      body:
        application/json:
          type: NewPerson
          example:
            lastname: Jackson
            firstname: Michael
            age: 54
      responses:
        201:
          description: The person was successfully created.
          body:
            application/json:
              type: ExistingPerson
              example:
                id: 5
                lastname: Jackson
                firstname: Michael
                age: 54
    /{id}:
      get:
        description: Extract the data of one person, specified by it's id.
        responses:
          200:
            body:
              application/json:
                type: ExistingPerson
          404:
            description: The specified identifier does not exist.
      put:
        description: Modify the data of one person, specified by it's id. It is not possible to change the id.
        body:
          application/json:
            type: ExistingPerson
        responses:
          200:
            body:
              application/json:
                type: ExistingPerson
          404:
            description: The specified identifier does not exist.
      delete:
        description: Delete completely the data of a person, specified by it's id.
        responses:
          200:
            description: The person was deleted successfully.
          404:
            description: The specified identifier does not exist.


================================================
File: Flask/rest/index.py
================================================
# Copyright 2020 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask
from flask import g
from flask import jsonify
from flask import render_template
from flask import request
from flask_json_schema import JsonSchema
from flask_json_schema import JsonValidationError
import json

from .database import Database
from .person import Person
from .schemas import person_insert_schema
from .schemas import person_update_schema

app = Flask(__name__, static_url_path="", static_folder="static")
schema = JsonSchema(app)


def get_db():
    db = getattr(g, '_database', None)
    if db is None:
        g._database = Database()
    return g._database


@app.teardown_appcontext
def close_connection(exception):
    db = getattr(g, '_database', None)
    if db is not None:
        db.disconnect()


@app.errorhandler(JsonValidationError)
def validation_error(e):
    errors = [validation_error.message for validation_error in e.errors]
    return jsonify({'error': e.message, 'errors': errors}), 400


@app.route('/')
def documentation():
    return render_template('doc.html')


@app.route('/api/person', methods=["POST"])
@schema.validate(person_insert_schema)
def create_person():
    data = request.get_json()
    person = Person(None, data["lastname"], data["firstname"], data["age"])
    person = get_db().save_person(person)
    return jsonify(person.asDictionary()), 201


@app.route('/api/person', methods=["GET"])
def get_persons():
    persons = get_db().read_all_persons()
    return jsonify([person.asDictionary() for person in persons])


@app.route('/api/person/<id>', methods=["GET"])
def get_person(id):
    person = get_db().read_one_person(id)
    if person is None:
        return "", 404
    else:
        return jsonify(person.asDictionary())


@app.route('/api/person/<id>', methods=["PUT"])
@schema.validate(person_update_schema)
def modify_person(id):
    person = get_db().read_one_person(id)
    if person is None:
        return "", 404
    else:
        data = request.get_json()
        person.lastname = data["lastname"]
        person.firstname = data["firstname"]
        person.age = data["age"]
        get_db().save_person(person)
        return jsonify(person.asDictionary())


@app.route('/api/person/<id>', methods=["DELETE"])
def delete_person(id):
    person = get_db().read_one_person(id)
    if person is None:
        return "", 404
    else:
        get_db().delete_person(person)
        return "", 200


================================================
File: Flask/rest/makefile
================================================
export FLASK_APP=index.py

run:
	raml2html doc.raml > templates/doc.html
	flask run


================================================
File: Flask/rest/person.py
================================================
# Copyright 2020 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class Person:
    def __init__(self, id, lastname, firstname, age):
        self.id = id
        self.lastname = lastname
        self.firstname = firstname
        self.age = age

    def asDictionary(self):
        return {"id": self.id,
                "lastname": self.lastname,
                "firstname": self.firstname,
                "age": self.age}


================================================
File: Flask/rest/schemas.py
================================================
# Copyright 2020 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

person_insert_schema = {
    'type': 'object',
    'required': ['firstname', 'lastname', 'age'],
    'properties': {
        'firstname': {
            'type': 'string'
        },
        'lastname': {
            'type': 'string'
        },
        'age': {
            'type': 'number'
        }
    },
    'additionalProperties': False
}

person_update_schema = {
    'type': 'object',
    'required': ['firstname', 'lastname', 'age', 'id'],
    'properties': {
        'id': {
            'type': 'number'
        },
        'firstname': {
            'type': 'string'
        },
        'lastname': {
            'type': 'string'
        },
        'age': {
            'type': 'number'
        }
    },
    'additionalProperties': False
}


================================================
File: Flask/rest/db/person.sql
================================================
create table person (
  lastname varchar(50),
  firstname varchar(50),
  age integer
);


================================================
File: Flask/rest/templates/doc.html
================================================
<!DOCTYPE HTML><html><head><title>Example of REST API for INF5190 API documentation</title><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="generator" content="https://github.com/raml2html/raml2html 7.5.0"><link rel="stylesheet" href="https://netdna.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css"><script type="text/javascript" src="https://code.jquery.com/jquery-1.11.0.min.js"></script><script type="text/javascript" src="https://netdna.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js"></script><script type="text/javascript">
      $(document).ready(function() {
  $('.page-header pre code, .top-resource-description pre code, .modal-body pre code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

  $('[data-toggle]').click(function() {
    var selector = $(this).data('target') + ' pre code';
    $(selector).each(function(i, block) {
      hljs.highlightBlock(block);
    });
  });

  // open modal on hashes like #_action_get
  $(window).bind('hashchange', function(e) {
    var anchor_id = document.location.hash.substr(1); //strip #
    var element = $('#' + anchor_id);

    // do we have such element + is it a modal?  --> show it
    if (element.length && element.hasClass('modal')) {
      element.modal('show');
    }
  });

  // execute hashchange on first page load
  $(window).trigger('hashchange');

  // remove url fragment on modal hide
  $('.modal').on('hidden.bs.modal', function() {
    try {
      if (history && history.replaceState) {
          history.replaceState({}, '', '#');
      }
    } catch(e) {}
  });
});
    </script><style>
      .hljs {
  background: transparent;
}
.parent {
  color: #999;
}
.list-group-item > .badge {
  float: none;
  margin-right: 6px;
}
.panel-title > .methods {
  float: right;
}
.badge {
  border-radius: 0;
  text-transform: uppercase;
  width: 70px;
  font-weight: normal;
  color: #f3f3f6;
  line-height: normal;
}
.badge_get {
  background-color: #63a8e2;
}
.badge_post {
  background-color: #6cbd7d;
}
.badge_put {
  background-color: #22bac4;
}
.badge_delete {
  background-color: #d26460;
}
.badge_patch {
  background-color: #ccc444;
}
.list-group,
.panel-group {
  margin-bottom: 0;
}
.panel-group .panel+.panel-white {
  margin-top: 0;
}
.panel-group .panel-white {
  border-bottom: 1px solid #F5F5F5;
  border-radius: 0;
}
.panel-white:last-child {
  border-bottom-color: white;
  -webkit-box-shadow: none;
  box-shadow: none;
}
.panel-white .panel-heading {
  background: white;
}
.tab-pane ul {
  padding-left: 2em;
}
.tab-pane h1 {
  font-size: 1.3em;
}
.tab-pane h2 {
  font-size: 1.2em;
  padding-bottom: 4px;
  border-bottom: 1px solid #ddd;
}
.tab-pane h3 {
  font-size: 1.1em;
}
.tab-content {
  border-left: 1px solid #ddd;
  border-right: 1px solid #ddd;
  border-bottom: 1px solid #ddd;
  padding: 10px;
}
#sidebar {
  margin-top: 30px;
  padding-right: 5px;
  overflow: auto;
  height: 90%;
}
.top-resource-description {
  border-bottom: 1px solid #ddd;
  background: #fcfcfc;
  padding: 15px 15px 0 15px;
  margin: -15px -15px 10px -15px;
}
.resource-description {
  border-bottom: 1px solid #fcfcfc;
  background: #fcfcfc;
  padding: 15px 15px 0 15px;
  margin: -15px -15px 10px -15px;
}
.resource-description p:last-child {
  margin: 0;
}
.list-group .badge {
  float: left;
}
.method_description {
  margin-left: 85px;
}
.method_description p:last-child {
  margin: 0;
}
.list-group-item {
  cursor: pointer;
}
.list-group-item:hover {
  background-color: #f5f5f5;
}
pre code {
  overflow: auto;
  word-wrap: normal;
  white-space: pre;
}
.items {
  background: #f5f5f5;
  color: #333;
  border: 1px solid #ccc;
  border-radius: 4px;
  padding: 9.5px;
  margin: 0 0 10px;
  font-size: 13px;
  line-height: 1.42857143;
}
.examples {
  margin-left: 0.5em;
}
.resource-modal li > ul {
  margin-bottom: 1em;
}
.required {
  color: #f00;
}
    </style></head><body data-spy="scroll" data-target="#sidebar"><div class="container"><div class="row"><div class="col-md-9" role="main"><div class="page-header"><h1>Example of REST API for INF5190 API documentation</h1><p></p></div><div class="panel panel-default"><div class="panel-heading"><h3 id="api" class="panel-title">/api</h3></div><div class="panel-body"><div class="panel-group"><div class="panel panel-white resource-modal"><div class="panel-heading"><h4 class="panel-title"><a class="collapsed" data-toggle="collapse" href="#panel_api_person"><span class="parent">/api</span>/person</a> <span class="methods"><a href="#api_person_get"><span class="badge badge_get">get</span></a> <a href="#api_person_post"><span class="badge badge_post">post</span></a></span></h4></div><div id="panel_api_person" class="panel-collapse collapse"><div class="panel-body"><div class="list-group"><div onclick="window.location.href = '#api_person_get'" class="list-group-item"><span class="badge badge_get">get</span><div class="method_description"><p>Extract the data of all the persons.</p></div><div class="clearfix"></div></div><div onclick="window.location.href = '#api_person_post'" class="list-group-item"><span class="badge badge_post">post</span><div class="method_description"><p>Create a new person.</p></div><div class="clearfix"></div></div></div></div></div><div class="modal fade" tabindex="0" id="api_person_get"><div class="modal-dialog modal-lg"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title" id="myModalLabel"><span class="badge badge_get">get</span> <span class="parent">/api</span>/person</h4></div><div class="modal-body"><div class="alert alert-info"><p>Extract the data of all the persons.</p></div><ul class="nav nav-tabs"><li class="active"><a href="#api_person_get_response" data-toggle="tab">Response</a></li></ul><div class="tab-content"><div class="tab-pane active" id="api_person_get_response"><h2>HTTP status code <a href="http://httpstatus.es/200" target="_blank">200</a></h2><h3>Body</h3><p><strong>Media type</strong>: application/json</p><p><strong>Type</strong>: array of object</p><p><strong>Items</strong>: ExistingPerson</p><div class="items"><ul><li><strong>id</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>lastname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>firstname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>age</strong>: <em><span class="required">required</span>(number)</em></li></ul></div></div></div></div></div></div></div><div class="modal fade" tabindex="0" id="api_person_post"><div class="modal-dialog modal-lg"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title" id="myModalLabel"><span class="badge badge_post">post</span> <span class="parent">/api</span>/person</h4></div><div class="modal-body"><div class="alert alert-info"><p>Create a new person.</p></div><ul class="nav nav-tabs"><li class="active"><a href="#api_person_post_request" data-toggle="tab">Request</a></li><li><a href="#api_person_post_response" data-toggle="tab">Response</a></li></ul><div class="tab-content"><div class="tab-pane active" id="api_person_post_request"><h3>Body</h3><p><strong>Media type</strong>: application/json</p><p><strong>Type</strong>: object</p><strong>Properties</strong><ul><li><strong>lastname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>firstname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>age</strong>: <em><span class="required">required</span>(number)</em></li></ul><p><strong>Example</strong>:</p><div class="examples"><pre><code>{
  "lastname": "Jackson",
  "firstname": "Michael",
  "age": 54
}</code></pre></div></div><div class="tab-pane" id="api_person_post_response"><h2>HTTP status code <a href="http://httpstatus.es/201" target="_blank">201</a></h2><p>The person was successfully created.</p><h3>Body</h3><p><strong>Media type</strong>: application/json</p><p><strong>Type</strong>: object</p><strong>Properties</strong><ul><li><strong>id</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>lastname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>firstname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>age</strong>: <em><span class="required">required</span>(number)</em></li></ul><p><strong>Example</strong>:</p><div class="examples"><pre><code>{
  "id": 5,
  "lastname": "Jackson",
  "firstname": "Michael",
  "age": 54
}</code></pre></div></div></div></div></div></div></div></div><div class="panel panel-white resource-modal"><div class="panel-heading"><h4 class="panel-title"><a class="collapsed" data-toggle="collapse" href="#panel_api_person__id_"><span class="parent">/api/person</span>/{id}</a> <span class="methods"><a href="#api_person__id__get"><span class="badge badge_get">get</span></a> <a href="#api_person__id__put"><span class="badge badge_put">put</span></a> <a href="#api_person__id__delete"><span class="badge badge_delete">delete</span></a></span></h4></div><div id="panel_api_person__id_" class="panel-collapse collapse"><div class="panel-body"><div class="list-group"><div onclick="window.location.href = '#api_person__id__get'" class="list-group-item"><span class="badge badge_get">get</span><div class="method_description"><p>Extract the data of one person, specified by it&#39;s id.</p></div><div class="clearfix"></div></div><div onclick="window.location.href = '#api_person__id__put'" class="list-group-item"><span class="badge badge_put">put</span><div class="method_description"><p>Modify the data of one person, specified by it&#39;s id. It is not possible to change the id.</p></div><div class="clearfix"></div></div><div onclick="window.location.href = '#api_person__id__delete'" class="list-group-item"><span class="badge badge_delete">delete</span><div class="method_description"><p>Delete completely the data of a person, specified by it&#39;s id.</p></div><div class="clearfix"></div></div></div></div></div><div class="modal fade" tabindex="0" id="api_person__id__get"><div class="modal-dialog modal-lg"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title" id="myModalLabel"><span class="badge badge_get">get</span> <span class="parent">/api/person</span>/{id}</h4></div><div class="modal-body"><div class="alert alert-info"><p>Extract the data of one person, specified by it&#39;s id.</p></div><ul class="nav nav-tabs"><li class="active"><a href="#api_person__id__get_request" data-toggle="tab">Request</a></li><li><a href="#api_person__id__get_response" data-toggle="tab">Response</a></li></ul><div class="tab-content"><div class="tab-pane active" id="api_person__id__get_request"><h3>URI Parameters</h3><ul><li><strong>id</strong>: <em><span class="required">required</span>(string)</em></li></ul></div><div class="tab-pane" id="api_person__id__get_response"><h2>HTTP status code <a href="http://httpstatus.es/200" target="_blank">200</a></h2><h3>Body</h3><p><strong>Media type</strong>: application/json</p><p><strong>Type</strong>: object</p><strong>Properties</strong><ul><li><strong>id</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>lastname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>firstname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>age</strong>: <em><span class="required">required</span>(number)</em></li></ul><h2>HTTP status code <a href="http://httpstatus.es/404" target="_blank">404</a></h2><p>The specified identifier does not exist.</p></div></div></div></div></div></div><div class="modal fade" tabindex="0" id="api_person__id__put"><div class="modal-dialog modal-lg"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title" id="myModalLabel"><span class="badge badge_put">put</span> <span class="parent">/api/person</span>/{id}</h4></div><div class="modal-body"><div class="alert alert-info"><p>Modify the data of one person, specified by it&#39;s id. It is not possible to change the id.</p></div><ul class="nav nav-tabs"><li class="active"><a href="#api_person__id__put_request" data-toggle="tab">Request</a></li><li><a href="#api_person__id__put_response" data-toggle="tab">Response</a></li></ul><div class="tab-content"><div class="tab-pane active" id="api_person__id__put_request"><h3>URI Parameters</h3><ul><li><strong>id</strong>: <em><span class="required">required</span>(string)</em></li></ul><h3>Body</h3><p><strong>Media type</strong>: application/json</p><p><strong>Type</strong>: object</p><strong>Properties</strong><ul><li><strong>id</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>lastname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>firstname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>age</strong>: <em><span class="required">required</span>(number)</em></li></ul></div><div class="tab-pane" id="api_person__id__put_response"><h2>HTTP status code <a href="http://httpstatus.es/200" target="_blank">200</a></h2><h3>Body</h3><p><strong>Media type</strong>: application/json</p><p><strong>Type</strong>: object</p><strong>Properties</strong><ul><li><strong>id</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>lastname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>firstname</strong>: <em><span class="required">required</span>(string)</em></li><li><strong>age</strong>: <em><span class="required">required</span>(number)</em></li></ul><h2>HTTP status code <a href="http://httpstatus.es/404" target="_blank">404</a></h2><p>The specified identifier does not exist.</p></div></div></div></div></div></div><div class="modal fade" tabindex="0" id="api_person__id__delete"><div class="modal-dialog modal-lg"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title" id="myModalLabel"><span class="badge badge_delete">delete</span> <span class="parent">/api/person</span>/{id}</h4></div><div class="modal-body"><div class="alert alert-info"><p>Delete completely the data of a person, specified by it&#39;s id.</p></div><ul class="nav nav-tabs"><li class="active"><a href="#api_person__id__delete_request" data-toggle="tab">Request</a></li><li><a href="#api_person__id__delete_response" data-toggle="tab">Response</a></li></ul><div class="tab-content"><div class="tab-pane active" id="api_person__id__delete_request"><h3>URI Parameters</h3><ul><li><strong>id</strong>: <em><span class="required">required</span>(string)</em></li></ul></div><div class="tab-pane" id="api_person__id__delete_response"><h2>HTTP status code <a href="http://httpstatus.es/200" target="_blank">200</a></h2><p>The person was deleted successfully.</p><h2>HTTP status code <a href="http://httpstatus.es/404" target="_blank">404</a></h2><p>The specified identifier does not exist.</p></div></div></div></div></div></div></div></div></div></div></div><div class="col-md-3"><div id="sidebar" class="hidden-print affix" role="complementary"><ul class="nav nav-pills nav-stacked"><li><a href="#api">/api</a></li></ul></div></div></div></div></body></html>

================================================
File: Flask/user-agent/index.py
================================================
# coding: utf8

# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from flask import Flask, request
app = Flask(__name__)


@app.route('/')
def hello_world():
    print(request.headers.get('User-Agent'))
    return """
       <html>
         <head>
           <title>Hello World!</title>
           <meta charset='utf-8'>
         </head>
         <body>
           <h1>Hello World!</h1>
         </body>
       </html>
       """


================================================
File: Flask/user-agent/makefile
================================================
export FLASK_APP=index.py

run:
	flask run


================================================
File: JSON/library.json
================================================
[
    {
        "type": "book",
        "title": "Théorie de la musique",
        "author": [
            "A. Danhauser"
        ],
        "year": 1996
    },
    {
        "type": "book",
        "title": "Test-Driven Development by Example",
        "author": [
            "Kent Beck"
        ],
        "year": 2003
    },
    {
        "type": "book",
        "title": "Design Patterns - Elements of Reusable Object-Oriented Software",
        "author": [
            "Erich Gamma",
            "Richard Helm",
            "Ralph Johnson",
            "John Vlissides"
        ],
        "year": 1995
    },
    {
        "type": "article",
        "title": "XML Schema",
        "author": [
            "Eric van der Vlist"
        ],
        "year": 2001
    }
]

================================================
File: JSON/timesheet.json
================================================
{
    "numero_employe": 884,
    "numero_semaine": 4,
    "annee": 2012,
    "lundi": [
        {
            "code_de_projet": 200,
            "minutes": 90
        },
        {
            "code_de_projet": 125,
            "minutes": 45
        },
        {
            "code_de_projet": 990,
            "minutes": 180
        },
        {
            "code_de_projet": 166,
            "minutes": 100
        }
    ],
    "mardi": [
        {
            "code_de_projet": 125,
            "minutes": 420
        }
    ],
    "mercredi": [
        {
            "code_de_projet": 125,
            "minutes": 420
        }
    ],
    "jeudi": [
        {
            "code_de_projet": 125,
            "minutes": 420
        },
        {
            "code_de_projet": 116,
            "minutes": 50
        }
    ],
    "vendredi": [
        {
            "code_de_projet": 166,
            "minutes": 420
        }
    ],
    "samedi": [],
    "dimanche": [
        {
            "code_de_projet": 990,
            "minutes": 30
        }
    ]
}

================================================
File: Python/classes.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class Person(object):
    def __init__(self, firstname, lastname):
        self.firstname = firstname
        self.lastname = lastname

    def get_complete_name(self):
        return "%s %s" % (self.firstname, self.lastname)

    def set_age(self, age):
        self.age = age


teacher = Person("Jacques", "Berger")
print(teacher.firstname)
print(teacher.get_complete_name())
teacher.set_age(76)
print(teacher.age)


================================================
File: Python/dictionnaire.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

objet = {"nom": "Berger", "prenom": "Jacques", "age": 87}

print(objet)

# Accéder à un élément
print(objet["nom"])

# Boucler sur les valeurs
for cle, valeur in objet.items():
    print(cle, valeur)

# Supprimer l'âge
del objet["age"]
print(objet)

# Ajouter un élément
objet["vivant"] = False
print(objet)


================================================
File: Python/exception.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

try:
    file_handle = open("input/not_exist.txt")
except IOError as e:
    print("Erreur avec le fichier en lecture :", e.strerror)


================================================
File: Python/files.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from os.path import exists

# Afficher le contenu d'un fichier à la console
text_file = open("input/input1")
print(text_file.read())
text_file.close()

# Lire une seule ligne d'un fichier
fichiers_prenoms_masculins = open("input/input2")
une_ligne = fichiers_prenoms_masculins.readline()
print(une_ligne)
fichiers_prenoms_masculins.close()

# Créer un fichier et y écrire des données
output = open("result.txt", "w")
resto_prefere = "Chez Chose"
phrase = "J'adore le restaurant %s." % resto_prefere
output.write(phrase)
output.close()

# Vérifier si un fichier existe
print(exists("input/input1"))
print(exists("input/input1000"))


================================================
File: Python/fonctions.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import datetime


# Fonction sans valeur de retour
def print_error_message(message):
    today = get_today()
    print("Erreur", today, message)


# Fonction avec valeur de retour
def get_today():
    return datetime.date.today()


print_error_message("Out of memory")

# Fonction dans une variable
new_function = get_today
print(new_function())


================================================
File: Python/hello.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

print("Hello World!")


================================================
File: Python/heritage.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class Person(object):
    def __init__(self, firstname, lastname, age):
        self.firstname = firstname
        self.lastname = lastname
        self.age = age

    def get_complete_name(self):
        return "%s %s" % (self.firstname, self.lastname)


class Student(Person):
    def __init__(self, firstname, lastname, age, code):
        super(Student, self).__init__(firstname, lastname, age)
        self.code = code

    def get_complete_name(self):
        return "%s [%s]" % (super(Student, self).get_complete_name(),
                            self.code)


class Teacher(Person):
    def __init__(self, firstname, lastname, age, employee_number):
        super(Teacher, self).__init__(firstname, lastname, age)
        self.employee_number = employee_number

    def get_complete_name(self):
        return "A Teacher Has No Name"


regular_person = Person("Vince", "Neil", 51)
print(regular_person.get_complete_name())

steven = Student("Steven", "Stevenson", 19, "STES12129701")
print(steven.get_complete_name())

teacher = Teacher("Jacques", "Berger", 87, "IEPSW3")
print(teacher.get_complete_name())


================================================
File: Python/hilo.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import random

print("Nouvelle partie de HILO")
mystery_number = random.randint(1, 100)

tries = 10
found = False
while tries > 0 and found is False:
    print("Entrez un nombre entre 1 et 100")
    user_number = int(input())
    if user_number < mystery_number:
        print("Plus haut!")
    elif user_number > mystery_number:
        print("Plus bas!")
    else:
        found = True
    tries = tries - 1

if found is True:
    print("Vous avez gagné!")
else:
    print("Vous avez perdu!")


================================================
File: Python/listes.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

une_liste = ["Pascal", "SQL", "PHP", "Python",
             "Ruby", "Groovy", "Java", "Javascript"]

# Boucler sur une liste
for each in une_liste:
    print(each)

print("Taille de la liste :", len(une_liste))

# Générer une liste de valeurs et boucler dessus
for i in range(0, 10):
    print(i)

# Opérateur []
print(une_liste[2])

# Version longue de la boucle
for i in range(0, len(une_liste)):
    print("Élément no. %d : %s" % (i + 1, une_liste[i]))


================================================
File: Python/mathsEx.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Opérations arithmétiques de base
print(5 + 3)
print(5 * 3)
print(5 / 3)
print(5 / 3.0)
print(5 < 3)
print(5 > 3)
print(5 <= 3)
print(5 >= 3)
print(5 == 3)
print(5 == 5)
print(5 != 3)
print((5 + 3) * (4 - 1))

# Utilisation de variables
annee_courante = 2017
annee_naissance = 1967
age = annee_courante - annee_naissance
print("L'âge d'une personne née en 1967 :", age)

# Calcul d'une moyenne
note_etudiant1 = 89
note_etudiant2 = 100
note_etudiant3 = 37
note_etudiant4 = 57
somme_notes = note_etudiant1 + note_etudiant2 + note_etudiant3 + note_etudiant4
moyenne_notes = somme_notes / 4.0
print("La moyenne des notes est de", moyenne_notes, "%")


================================================
File: Python/service-web.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Ce programme invoque les services web de l'exemple /Flask/api
# Installer le module requests : pip install --user requests

import requests

# Lire la liste des pays
response = requests.get('http://localhost:5000/api/pays/')
if response.status_code == 200:
    collection = response.json()
    for each in collection:
        print(each['nom'])
else:
    print("Erreur lors de la lecture du service")

# Créer un nouveau pays
nouveau = {'nom': 'Russie'}
post_response = requests.post('http://localhost:5000/api/pays/', json=nouveau)
if post_response.status_code == 201:
    print("Pays créé avec succès")
else:
    print("Erreur avec la création du pays")


================================================
File: Python/strings.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Délimiteurs de chaîne
print("Chaîne avec des caractères accentués")
print('Chaîne avec des caractères accentués')
print("J'aime les fruits.")
print('Ces élus sont "compétents", parfois!')

# Plusieurs paramètres au print (affichés avec un espace entre chacun)
nombre_pommes = 5
print("J'ai mangé", nombre_pommes, "pommes pour souper hier.")

# Formattage
print("J'ai mangé %d pommes pour souper hier." % nombre_pommes)

nombre_poires = 2
nombre_oranges = 7
phrase = ("J'ai mangé %d pommes, %d poires "
          "et %d oranges pour déjeuner ce matin.")
print(phrase % (nombre_pommes, nombre_poires, nombre_oranges))

# Multi-lignes
longue_chaine = """
Une petite anecdote que j'ai vécue lorsque j'ai terminé mon cégep et qui me
fait toujours rire, même aujourd'hui.

En 2003, le marché du développement de logiciels n'était pas aussi
intéressant qu'aujourd'hui à Montréal. À l'époque, il y avait plus d'offre
que de demande et les emplois étaient plus rares. Du moins, les bons emplois
étaient plus rares.

Fraîchement sorti du cégep avec mon DEC en informatique de gestion en poche,
je me suis lancé dans la recherche d'un emploi à Montréal. Durant les
premiers mois de ma recherche d'emploi, j'ai passé plusieurs entrevues
dans diverses entreprises. L'une de ces entrevues m'a frappé plus que les
autres.

Il s'agissait d'un poste bien peu intéressant, pour une entreprise qui
développait un logiciel comptable. La tâche principal de ce poste était de
prendre un formulaire papier du gouvernement et d'écrire un document HTML qui
reproduit le plus fidèlement possible le formulaire papier original. En
gros, du HTML et du CSS assez élémentaire. L'entreprise offrait 25,000$ par
année pour ce poste et exigeait à l'employé d'être présent au bureau au
moins 38 heures par semaine.

Le plus étonnant dans tout ça, ce n'est pas le faible salaire ou les tâches
peu intéressantes, c'est définitivement la méthode de recrutement de
l'entreprise. Mon entrevue a durée près de deux heures. J'ai eu droit à une
entrevue complète en français et en anglais, à un test technique sur le HTML
et finalement à un test de personnalité. Finalement, le recruteur m'a confié
qu'il devait rencontrer 25 candidats au total pour ce poste.

Évidemment, je n'ai pas eu l'emploi. Par contre, encore aujourd'hui, je
suis étonné par cette expérience. Une entrevue de 2 heures, bilingue, avec
test technique et test de personnalité, multipliée par 25 candidats, pour
un poste d'HTML élémentaire! Les coûts de recrutement de cette entreprise
doivent être incroyables.
"""
print(longue_chaine)

# Longueur d'une chaîne
print("Longueur de ce texte :", len(longue_chaine))


================================================
File: Python/input/input1
================================================
Plusieurs personnes croient qu'il n'est pas nécessaire de se préparer avant une entrevue d'emploi, que l'employeur doit vous voir au naturel, car c'est ainsi qu'il vous verra travailler. Ce n'est pas faux! Mais si on considère que les entreprises veulent des employés méthodiques, rigoureux et travaillants, un minimum de préparation est de mise.

Je ne crois pas détenir la vérité absolue, ni même la meilleure façon de se préparer pour une entrevue. Je vais simplement décrire comment je me prépare pour une telle rencontre dans le but d'aider ceux qui ne savent pas comment s'y prendre. Ça fonctionne bien pour moi, peut-être que ça ne fonctionnera pas pour vous. Aucune garantie.

Vous avez déjà un premier pas de fait. Vous avez envoyé votre CV et il était suffisamment intéressant pour vous permettre de décrocher une entrevue. Célébration! OK, mais pas trop longtemps, on a du travail! Je prends quand même une petite Heineken pour célébrer cette petite victoire.

La première étape est d'apprendre à connaître l'entreprise. Ah oui! Des fois, on envoie nos CV un peu n'importe où, sans trop regarder, alors il est possible qu'une de ces entreprises vous contacte, même si vous ne la connaissez pas du tout. Bref, que vous la connaissiez ou non, prenez le temps d'aller sur le site web de la compagnie et d'y lire à peu près tout ce que vous y trouverez. Ensuite, vous aurez le plaisir de dire à l'entrevue «Ah oui, j'ai lu ça sur votre site web!»

Dans certains cas, c'est la seule chose que vous pourrez faire, lire le contenu du site web. Sinon, vous pouvez faire quelques recherches supplémentaires pour trouver des articles qui parlent de cette entreprise. Si l'organisation vient tout juste de gagner un prix quelconque, en glisser un mot à l'entrevue montrera que vous êtes bien renseigné.

Si vous avez la chance de connaître quelqu'un qui travaille pour cette entreprise, c'est merveilleux! Faites aller votre réseau de contacts. Contactez cette personne et posez-lui des questions sur l'ambiance de travail, sur ses collègues et sur les outils utilisés dans l'entreprise (langages de programmation, frameworks, etc.). Une vision de l'intérieur, c'est toujours bon.

Si votre contact vous parle d'outils que vous ne connaissez pas, c'est le moment idéal de vous documenter. Lisez rapidement sur ces outils. Si vous avez le temps, essayez-les! Téléchargez des versions gratuites ou d'évaluation et faites une petite preuve de concept avec ces outils. C'est le meilleur moyen d'en saisir l'essence rapidement. Ensuite, durant l'entrevue, si on vous demande si vous connaissez un outil, vous pourrez dire que vous ne connaissez pas l'outil en profondeur mais que vous l'avez essayé il y a quelques jours en vous préparant à l'entrevue. Décrivez la preuve de concept que vous avez faite. Ils seront surpris que vous ayez pris le temps de faire cette recherche.

C'est beaucoup de travail tout ça? Oui, évidemment. Je crois fermement que les efforts finissent toujours par payer. Si c'est trop de travail pour vous, ou que vous n'avez pas cette discipline, ne le faites pas. Vous finirez quand même par trouver du travail. Par contre, si vous voulez vraiment décrocher cet emploi, n'ayez pas peur de mettre des efforts. Et n'ayez pas peur d'échouer. C'est en échouant qu'on apprend le plus.


================================================
File: Python/input/input2
================================================
Steven
Jacques
Roberto


================================================
File: Python/modules/main.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from person import Person
from student import Student
from teacher import Teacher

regular_person = Person("Vince", "Neil", 51)
print(regular_person.get_complete_name())

steven = Student("Steven", "Stevenson", 19, "STES12129701")
print(steven.get_complete_name())

teacher = Teacher("Jacques", "Berger", 87, "IEPSW3")
print(teacher.get_complete_name())


================================================
File: Python/modules/person.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class Person(object):
    def __init__(self, firstname, lastname, age):
        self.firstname = firstname
        self.lastname = lastname
        self.age = age

    def get_complete_name(self):
        return "%s %s" % (self.firstname, self.lastname)


================================================
File: Python/modules/student.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from person import Person


class Student(Person):
    def __init__(self, firstname, lastname, age, code):
        super(Student, self).__init__(firstname, lastname, age)
        self.code = code

    def get_complete_name(self):
        return "%s [%s]" % (super(Student, self).get_complete_name(),
                            self.code)


================================================
File: Python/modules/teacher.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from person import Person


class Teacher(Person):
    def __init__(self, firstname, lastname, age, employee_number):
        super(Teacher, self).__init__(firstname, lastname, age)
        self.employee_number = employee_number

    def get_complete_name(self):
        return "A Teacher Has No Name"


================================================
File: SQLite/insert-update.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sqlite3

connection = sqlite3.connect('musique.db')
cursor = connection.cursor()
cursor.execute(("insert into artiste(nom, est_solo, nombre_individus) "
                "values('Brain Surgery', 0, 7)"))

cursor.execute("select last_insert_rowid()")
lastId = cursor.fetchone()[0]
connection.commit()

cursor.execute("update artiste set nom = 'Unstoppable' where id = %d" % lastId)
connection.commit()

cursor.execute("select nom from artiste")
for row in cursor:
    print(row[0])

connection.close()


================================================
File: SQLite/musique.sql
================================================
create table artiste (
  id integer primary key,
  nom varchar(25),
  est_solo boolean,
  nombre_individus integer
);

create table maison_disque (
  id integer primary key,
  nom varchar(25)
);

create table album (
  id integer primary key,
  titre varchar(25),
  annee integer,
  artiste_id integer,
  maison_disque_id integer,
  foreign key (artiste_id) references artiste(id),
  foreign key (maison_disque_id) references maison_disque(id)
);

insert into artiste values (1, 'Michael Jackson', 1, 1);
insert into artiste values (2, 'Michael Buble', 1, 1);
insert into artiste values (3, 'Elvis Presley', 1, 1);
insert into artiste values (4, 'Iron Maiden', 0, 6);
insert into artiste values (5, 'Metallica', 0, 4);
insert into artiste values (6, 'The Sweet Database', 0, 9);
insert into artiste values (7, 'Computing Gods', 0, 3);

insert into maison_disque values (1, 'Century Media');
insert into maison_disque values (2, 'Nuclear Blast');
insert into maison_disque values (3, 'Magic Geni');

insert into album values (1, 'Thriller', 1982, 1, 1);
insert into album values (2, 'Xscape', 2014, 1, 1);
insert into album values (3, 'Bad', 1987, 1, 1);
insert into album values (4, 'Dangerous', 1991, 1, 1);
insert into album values (5, 'Invincible', 2001, 1, 2);
insert into album values (6, 'Immortal', 2011, 1, 1);
insert into album values (7, 'To Be Loved', 2013, 2, 1);
insert into album values (8, 'Christmas', 2011, 2, 1);
insert into album values (9, 'Crazy Love', 2009, 2, 1);
insert into album values (10, 'Today', 1975, 3, 1);
insert into album values (11, 'Promised Land', 1975, 3, 1);
insert into album values (12, 'Fear Of The Dark', 1992, 4, 2);
insert into album values (13, 'Killers', 1981, 4, 2);
insert into album values (14, 'Piece of Mind', 1983, 4, 2);
insert into album values (15, 'Powerslave', 1984, 4, 2);
insert into album values (16, 'Metallica', 1991, 5, 2);


================================================
File: SQLite/no_injection.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sqlite3

connection = sqlite3.connect('musique.db')

name = "', 0, 0); drop table artiste; --"
solo = 1
number = 1

connection.execute(("insert into artiste(nom, est_solo, nombre_individus) "
                    "values(?, ?, ?)"), (name, solo, number))
connection.commit()

connection.close()


================================================
File: SQLite/select.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sqlite3

connection = sqlite3.connect('musique.db')
cursor = connection.cursor()
cursor.execute("select * from album")
for row in cursor:
    identifier, album, year, artiste_id, publisher_id = row
    print("%s, %d" % (album, year))

connection.close()


================================================
File: SQLite/sql_injection.py
================================================
# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sqlite3

connection = sqlite3.connect('musique.db')

name = "', 0, 0); drop table artiste; --"
solo = 1
number = 1

connection.executescript(("insert into artiste"
                          "(nom, est_solo, nombre_individus) "
                          "values('%s', %d, %d)") % (name, solo, number))
connection.commit()

connection.close()


================================================
File: auth/check.py
================================================
# coding: utf8

# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import hashlib
import sqlite3
import uuid

print("Nom d'utilisateur : ")
username = input()
print("Mot de passe : ")
password = input()

connection = sqlite3.connect('users.db')
cursor = connection.cursor()
cursor.execute(("select salt, hash from users where utilisateur=?"),
               (username,))
user = cursor.fetchone()
connection.close()

if user is None:
    print("Utilisateur inconnu")
else:
    salt = user[0]
    hashed_password = hashlib.sha512(str(password + salt).encode("utf-8")).hexdigest()
    if hashed_password == user[1]:
        print("Accès autorisé")
    else:
        print("Accès refusé")


================================================
File: auth/insert.py
================================================
# coding: utf8

# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import hashlib
import sqlite3
import uuid

print("Nom d'utilisateur : ")
username = input()
print("Mot de passe : ")
password = input()

salt = uuid.uuid4().hex
hashed_password = hashlib.sha512(str(password + salt).encode("utf-8")).hexdigest()

connection = sqlite3.connect('users.db')

connection.execute(("insert into users(utilisateur, salt, hash) "
                    "values(?, ?, ?)"), (username, salt, hashed_password))

connection.commit()
connection.close()


================================================
File: auth/users.sql
================================================
create table users (
  id integer primary key,
  utilisateur varchar(25),
  salt varchar(32),
  hash varchar(128)
);


================================================
File: email/gmail.py
================================================
# coding: utf8

# Copyright 2017 Jacques Berger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

source_address = "steven@gmail.com"
destination_address = "stevenson@gmail.com"
body = "Please note that I'm writing a script to send emails."
subject = "I send mails!"

msg = MIMEMultipart()
msg['Subject'] = subject
msg['From'] = source_address
msg['To'] = destination_address
msg['ReplyTo'] = "steve@uqam.ca"

msg.attach(MIMEText(body, 'plain'))

server = smtplib.SMTP('smtp.gmail.com', 587)
server.ehlo()
server.starttls()
server.login(source_address, "secret123")
text = msg.as_string()
server.sendmail(source_address, destination_address, text)
server.quit()



